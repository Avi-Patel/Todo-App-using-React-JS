{"version":3,"sources":["components/SnackbarProvider.js","components/utilityComponents/Checkbox.js","components/utilityComponents/IconButton.js","constants.js","iconClassMap.js","components/FilterPanel.js","components/utilityComponents/TextInput.js","components/utilityComponents/Button.js","components/Header.js","components/utilityComponents/Dropdown.js","components/TodoForm.js","components/CreateTodoForm.js","components/Analytics.js","components/Todo.js","components/TodoList.js","components/utilityComponents/WithToolTip.js","components/BulkActionPanel.js","components/ModalWindow.js","components/EditTodoForm.js","mockServer.js","hooks/useTodosState.js","hooks/useFilterState.js","components/TodoApp.js","hooks/useModalWindow.js","hooks/useDate.js","filterValidationOnTodo.js","index.js"],"names":["SnackbarContext","React","createContext","SnackbarProvider","children","useState","show","message","undefined","snackBarState","setSnackbarState","timeoutId","useRef","showSnackbar","useCallback","clearTimeout","current","setTimeout","Provider","value","className","Checkbox","label","isChecked","onChange","type","checked","_Checkbox","memo","IconButton","dataType","btnClass","iconClass","onClick","data-type","_IconButton","ACTIONS","BULK_ACTIONS","MODAL_WINDOW_ACTIONS","CATEGORIES","PERSONAL","ACADEMIC","SOCIAL","URGENCIES","LOW","MEDIUM","HIGH","TODO_FORM_INPUTS","TITLE","URGENCY","CATEGORY","FILTER_ACTIONS","ICON_CLASS_MAP","IconGroup","types","filter","onFilterUpdate","Object","entries","map","key","FilterPanel","appliedFilter","onFilterAction","toggleIsInCompleteEnabled","updateUrgencyFilter","event","buttonElement","target","closest","payload","dataset","updateCategoryFilter","urgencyFilter","categoryFilter","isIncompleteEnabled","_FilterPanel","TextInput","placeholder","name","extraClasses","data-name","_TextInput","Button","_Button","AppTitleAndDate","date","SearchBar","searchValue","handleSearchChange","newSearchValue","handleClearSearch","Header","_Header","Dropdown","initialValue","values","toUpperCase","slice","_Dropdown","TodoForm","formData","onFormChange","toLocaleLowerCase","title","urgency","category","INITIAL_FORM_DATA","CreateTodoForm","onTodoAction","setFormData","handleFormChange","prevFormData","handleSubmit","data","newTodos","id","Date","valueOf","toLocaleString","completed","_CreateTodoForm","Analytics","todos","totalTodos","length","completedTodos","useMemo","todo","percentage","Math","round","_Analytics","Todo","isSelected","onModalWindowAction","handleCompletionToggle","ids","handleDeleteTodo","toggleTodoSelection","handleEditTodo","style","fontSize","_Todo","TodoList","currentlySelectedIds","includes","WithToolTip","setShow","handleOnHover","handleHoverOut","display","alignItems","onMouseOver","onMouseOut","BulkActionPanel","handleBulkCompletionToggle","handleClearSelection","handleBulkDelete","_BulkActionPanel","ModalWindow","EditTodoForm","todoData","setTodoData","handleTodoDataChange","handleUpdate","updatedTodos","handleCancel","_EditTodoForm","mockServer","getIndexInDatabase","findIndex","serverWorking","random","updateLocalStorage","localStorage","setItem","JSON","stringify","getTodosFromDatabase","Promise","resolve","reject","storedTodos","parse","getItem","forEach","concat","push","createTodoInDatabase","Array","isArray","newTodo","updateTodoInDatabase","updatedTodo","i","index","deleteTodoFromDatabase","createMockServer","findIndexById","reducer","state","action","indexOf","INITIAL_TODOS_STATE","INITIAL_FILTER_STATE","updatedUrgencyFilter","updatedCategoryFilter","TodoApp","useReducer","todosState","dispatch","useContext","showSnackbarRef","useEffect","then","catch","useTodosState","filterState","useFilterState","isOpen","modalWindow","SetModalWindow","useModalWindow","toDateString","setDate","setInterval","useDate","filteredTodos","filterData","noUrgencyApplied","noCategoryApplied","isSatifiesSearchValue","toLowerCase","validateTodoForFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1987521b.chunk.js","sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\n\nconst SnackbarContext = React.createContext();\n\nconst SnackbarProvider = ({ children }) => {\n  const [snackBarState, setSnackbarState] = useState({ show: false, message: undefined });\n\n  const timeoutId = useRef();\n\n  const showSnackbar = useCallback((message) => {\n    clearTimeout(timeoutId.current);\n    setSnackbarState({ show: true, message });\n    timeoutId.current = setTimeout(() => {\n      setSnackbarState({ show: false, message: undefined });\n    }, 3000);\n  }, []);\n\n  return (\n    <SnackbarContext.Provider value={showSnackbar}>\n      {children}\n      {snackBarState.show && <div className=\"snackbar\">{snackBarState.message}</div>}\n    </SnackbarContext.Provider>\n  );\n};\n\nexport { SnackbarContext };\nexport { SnackbarProvider };\n","import React from \"react\";\n\nconst Checkbox = ({ label, isChecked, onChange }) => (\n  <div className=\"check-box-row mar8 pad8\">\n    <input type=\"checkbox\" className=\"check-box mar8\" checked={isChecked} onChange={onChange} />\n    <div className=\"normal-bold-text\">{label}</div>\n  </div>\n);\n\nconst _Checkbox = React.memo(Checkbox);\nexport { _Checkbox as Checkbox };\n","import React from \"react\";\n\nconst IconButton = ({ dataType, btnClass, iconClass, onClick }) => {\n  return (\n    <button className={`icon-btn ${btnClass}`} data-type={dataType} onClick={onClick}>\n      <i className={iconClass}></i>\n    </button>\n  );\n};\nconst _IconButton = React.memo(IconButton);\n\nexport { _IconButton as IconButton };\n","export const ACTIONS = {\n  INIT: \"INIT\",\n  EDIT: \"EDIT\",\n  ADD: \"ADD\",\n  UPDATE: \"UPDATE\",\n  DELETE: \"DELETE\",\n  SELECT: \"SELECT\",\n  TOGGLE_FROM_SELECTED: \"TOGGLE_FROM_SELECTED\",\n  TOGGLE_COMPLETION: \"TOGGLE_COMPLETION\",\n  ALTER_COMPLETION_IN_BULK: \"ALTER_COMPLETION_IN_BULK\",\n  DELETE_IN_BULK: \"DELETE_IN_BULK\",\n  RESET: \"RESET\",\n  RESET_SELECTED_IDS: \"RESET_SELECTED_IDS\",\n};\n\nexport const BULK_ACTIONS = {\n  TOGGLE_COMPLETION: \"Toggle completion\",\n  CLEAR_SELECTION: \"Clear selection\",\n  DELETE: \"Delete\",\n};\n\nexport const MODAL_WINDOW_ACTIONS = {\n  SHOW: \"SHOW\",\n  CLOSE: \"CLOSE\",\n  UPDATE_DATA: \"UPDATE_DATA\",\n};\n\nexport const HISTORY_ACTIONS = {\n  ADD_ACTIONS: \"ADD_ACTION\",\n  UNDO_SUCCESS: \"UNDO_SUCCESS\",\n  REDO_SUCCESS: \"REDO_SUCCESS\",\n};\n\n//\nexport const CATEGORIES = {\n  PERSONAL: \"personal\",\n  ACADEMIC: \"academic\",\n  SOCIAL: \"social\",\n};\nexport const URGENCIES = {\n  LOW: \"low\",\n  MEDIUM: \"medium\",\n  HIGH: \"high\",\n};\n\nexport const TODO_FORM_INPUTS = {\n  TITLE: \"Title\",\n  URGENCY: \"Urgency\",\n  CATEGORY: \"Category\",\n};\n\nexport const FILTER_ACTIONS = {\n  UPDATE_URGENCY_FILTER: \"UPDATE_URGENCY_FILTER\",\n  UPDATE_CATEGORY_FILTER: \"UPDATE_CATEGORY_FILTER\",\n  TOGGLE_INCOMPLETE_ENABLED: \"TOGGLE_INCOMPLETE_ENABLED\",\n  UPDATE_SEARCH_VALUE: \"UPDATE_SEARCH_VALUE\",\n};\n\nexport const INVALID_POSITION = -1;\n","import { ACTIONS, BULK_ACTIONS, URGENCIES, CATEGORIES } from \"./constants\";\n\nexport const ICON_CLASS_MAP = {\n  [BULK_ACTIONS.TOGGLE_COMPLETION]: \"fa fa-check-square cblack\",\n  [BULK_ACTIONS.CLEAR_SELECTION]: \"fa fa-square-o cblack\",\n  [BULK_ACTIONS.DELETE]: \"fa fa-minus-square cblack\",\n  [URGENCIES.LOW]: \"fa fa-exclamation-triangle cgreen\",\n  [URGENCIES.MEDIUM]: \"fa fa-exclamation-triangle cyellow\",\n  [URGENCIES.HIGH]: \"fa fa-exclamation-triangle cred\",\n  [CATEGORIES.PERSONAL]: \"fa fa-user cwhite\",\n  [CATEGORIES.ACADEMIC]: \"fa fa-book cwhite\",\n  [CATEGORIES.SOCIAL]: \"fa fa-users cwhite\",\n  [ACTIONS.EDIT]: \"fa fa-pencil cwhite\",\n  [ACTIONS.DELETE]: \"fa fa-trash cwhite\",\n};\n","import React, { useCallback } from \"react\";\n\nimport { Checkbox } from \"./utilityComponents/Checkbox\";\nimport { IconButton } from \"./utilityComponents/IconButton\";\n\nimport { URGENCIES, CATEGORIES, FILTER_ACTIONS } from \"../constants\";\nimport { ICON_CLASS_MAP } from \"../iconClassMap\";\n\nconst IconGroup = React.memo(({ label, types, filter, onFilterUpdate }) => (\n  <div className=\"filter-row top-bottom-pad8\">\n    <div className=\"normal-bold-text right-left-pad8\">{label}</div>\n    <div className=\"filter-btns\">\n      {Object.entries(types).map(([key, value]) => {\n        const className = `icon-btn ${filter[value] ? \"filter-btn-selected\" : \"\"}`;\n\n        return (\n          <IconButton\n            key={key}\n            btnClass={className}\n            dataType={value}\n            iconClass={ICON_CLASS_MAP[value]}\n            onClick={onFilterUpdate}\n          />\n        );\n      })}\n    </div>\n  </div>\n));\n\nconst FilterPanel = ({ appliedFilter, onFilterAction }) => {\n  //Doubt: name\n  const toggleIsInCompleteEnabled = useCallback(\n    () => onFilterAction({ type: FILTER_ACTIONS.TOGGLE_INCOMPLETE_ENABLED }),\n    [onFilterAction]\n  );\n\n  //\n  const updateUrgencyFilter = useCallback(\n    (event) => {\n      const buttonElement = event.target.closest(\"[data-type]\");\n\n      if (buttonElement) {\n        onFilterAction({\n          type: FILTER_ACTIONS.UPDATE_URGENCY_FILTER,\n          payload: { type: buttonElement.dataset.type },\n        });\n      }\n    },\n    [onFilterAction]\n  );\n  const updateCategoryFilter = useCallback(\n    (event) => {\n      const buttonElement = event.target.closest(\"[data-type]\");\n\n      if (buttonElement) {\n        onFilterAction({\n          type: FILTER_ACTIONS.UPDATE_CATEGORY_FILTER,\n          payload: { type: buttonElement.dataset.type },\n        });\n      }\n    },\n    [onFilterAction]\n  );\n\n  return (\n    <div className=\"card b12 pad8\">\n      <IconGroup\n        label=\"Urgency\"\n        types={URGENCIES}\n        filter={appliedFilter.urgencyFilter}\n        onFilterUpdate={updateUrgencyFilter}\n      />\n      <IconGroup\n        label=\"Category\"\n        types={CATEGORIES}\n        filter={appliedFilter.categoryFilter}\n        onFilterUpdate={updateCategoryFilter}\n      />\n      <Checkbox\n        label=\"Not Completed\"\n        isChecked={appliedFilter.isIncompleteEnabled}\n        onChange={toggleIsInCompleteEnabled}\n      />\n      <div className=\"normal-bold-text top-bottom-pad8\">Filter Todos</div>\n    </div>\n  );\n};\nconst _FilterPanel = React.memo(FilterPanel);\nexport { _FilterPanel as FilterPanel };\n","import React from \"react\";\n\nconst TextInput = ({ value, onChange, placeholder, name, extraClasses }) => (\n  <input\n    type=\"text\"\n    data-name={name}\n    value={value}\n    className={`text-input mar8 pad12 ${extraClasses ? extraClasses : \"\"}`}\n    placeholder={placeholder}\n    onChange={onChange}\n  />\n);\n\nconst _TextInput = React.memo(TextInput);\nexport { _TextInput as TextInput };\n","import React from \"react\";\n\nconst Button = ({ label, onClick, extraClasses }) => (\n  <button className={`green-btn mar8 ${extraClasses}`} onClick={onClick}>\n    {label}\n  </button>\n);\nconst _Button = React.memo(Button);\n\nexport { _Button as Button };\n","import React, { useCallback } from \"react\";\n\nimport { TextInput } from \"./utilityComponents/TextInput\";\nimport { Button } from \"./utilityComponents/Button\";\n\nimport { FILTER_ACTIONS } from \"../constants\";\n\nconst AppTitleAndDate = React.memo(({ date }) => (\n  <div className=\"header__left b8\">\n    <div className=\"header__left__name\">Todo App</div>\n    <div className=\"header__left__date\">{date}</div>\n  </div>\n));\n\nconst SearchBar = React.memo(({ searchValue, onFilterAction }) => {\n  const handleSearchChange = useCallback(\n    (event) =>\n      onFilterAction({\n        type: FILTER_ACTIONS.UPDATE_SEARCH_VALUE,\n        payload: { newSearchValue: event.target.value },\n      }),\n    [onFilterAction]\n  );\n\n  const handleClearSearch = useCallback(\n    () =>\n      onFilterAction({\n        type: FILTER_ACTIONS.UPDATE_SEARCH_VALUE,\n        payload: { newSearchValue: \"\" },\n      }),\n    [onFilterAction]\n  );\n\n  return (\n    <div className=\"header__right\">\n      <TextInput\n        name=\"search\"\n        value={searchValue}\n        placeholder=\"search todos\"\n        onChange={handleSearchChange}\n        extraClasses=\"header__right__search-input\"\n      />\n      <Button label=\"Clear\" onClick={handleClearSearch} />\n    </div>\n  );\n});\n\nconst Header = ({ date, searchValue, onFilterAction }) => (\n  <div className=\"header b8 mar4\">\n    <AppTitleAndDate date={date} />\n    <SearchBar searchValue={searchValue} onFilterAction={onFilterAction} />\n  </div>\n);\n\nconst _Header = React.memo(Header);\nexport { _Header as Header };\n","import React from \"react\";\n\nconst Dropdown = ({ name, initialValue, values, onChange }) => (\n  <select data-name={name} value={initialValue} className=\"dropdown mar8 pad12\" onChange={onChange}>\n    {Object.entries(values).map(([key, value]) => (\n      <option key={key} value={value}>\n        {value[0].toUpperCase() + value.slice(1)}\n      </option>\n    ))}\n  </select>\n);\n\nconst _Dropdown = React.memo(Dropdown);\nexport { _Dropdown as Dropdown };\n","import React from \"react\";\n\nimport { TextInput } from \"./utilityComponents/TextInput\";\nimport { Dropdown } from \"./utilityComponents/Dropdown\";\n\nimport { URGENCIES, CATEGORIES, TODO_FORM_INPUTS } from \"../constants\";\n\nconst TodoForm = ({ formData, onFormChange }) => (\n  <div className=\"form\">\n    <TextInput\n      name={TODO_FORM_INPUTS.TITLE.toLocaleLowerCase()}\n      value={formData.title}\n      placeholder=\"Add Todo Title\"\n      onChange={onFormChange}\n    />\n\n    <div className=\"normal-bold-text mar8\">{TODO_FORM_INPUTS.URGENCY}</div>\n    <Dropdown\n      name={TODO_FORM_INPUTS.URGENCY.toLocaleLowerCase()}\n      initialValue={formData.urgency}\n      values={URGENCIES}\n      onChange={onFormChange}\n    />\n\n    <div className=\"normal-bold-text mar8\">{TODO_FORM_INPUTS.CATEGORY}</div>\n    <Dropdown\n      name={TODO_FORM_INPUTS.CATEGORY.toLocaleLowerCase()}\n      initialValue={formData.category}\n      values={CATEGORIES}\n      onChange={onFormChange}\n    />\n  </div>\n);\n\nexport { TodoForm };\n","import React, { useCallback, useState } from \"react\";\n\nimport { TodoForm } from \"./TodoForm\";\n\nimport { URGENCIES, CATEGORIES, ACTIONS } from \"../constants.js\";\n\nconst uuid = () => new Date().valueOf();\n\nconst createTodoObject = (data) => ({\n  id: uuid(),\n  date: new Date().toLocaleString(),\n  title: data.title || \"\",\n  urgency: data.urgency || URGENCIES.LOW,\n  category: data.category || CATEGORIES.PERSONAL,\n  completed: false,\n});\n\nconst INITIAL_FORM_DATA = {\n  title: \"\",\n  urgency: URGENCIES.LOW,\n  category: CATEGORIES.PERSONAL,\n};\n\nconst CreateTodoForm = ({ onTodoAction }) => {\n  // single useState\n  const [formData, setFormData] = useState(INITIAL_FORM_DATA);\n\n  const handleFormChange = useCallback(\n    (event) =>\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        [event.target.dataset.name]: event.target.value,\n      })),\n    []\n  );\n\n  const handleSubmit = useCallback(() => {\n    if (formData.title === \"\") {\n      return;\n    }\n    onTodoAction({\n      type: ACTIONS.ADD,\n      payload: { newTodos: createTodoObject(formData) },\n    });\n    setFormData(INITIAL_FORM_DATA);\n  }, [onTodoAction, formData]);\n\n  return (\n    <div className=\"card b12 pad8 top-mar8\">\n      <div className=\"create-todo-text mar8\">Create Todo</div>\n      <TodoForm formData={formData} onFormChange={handleFormChange}></TodoForm>\n      <button className=\"icon-btn todo-add-btn\" onClick={handleSubmit}>\n        <div className=\"fa fa-plus cwhite\"></div>\n      </button>\n    </div>\n  );\n};\nconst _CreateTodoForm = React.memo(CreateTodoForm);\nexport { _CreateTodoForm as CreateTodoForm };\n","import React, { useMemo } from \"react\";\n\nconst Analytics = ({ todos }) => {\n  const totalTodos = todos.length;\n  const completedTodos = useMemo(() => todos.filter((todo) => todo.completed).length, [todos]);\n\n  const percentage = totalTodos === 0 ? 0 : Math.round((completedTodos / totalTodos) * 100);\n\n  return (\n    <div className=\"card b12 pad8 top-mar8\">\n      <div className=\"percentage-circle\">\n        <div className=\"percetage-text\">{percentage + \" %\"}</div>\n        <div className=\"ratio-text\">\n          {completedTodos} / {totalTodos}\n        </div>\n      </div>\n      <div className=\"normal-bold-text top-bottom-mar8\">Analytics</div>\n    </div>\n  );\n};\nconst _Analytics = React.memo(Analytics);\nexport { _Analytics as Analytics };\n","import React, { useCallback } from \"react\";\n\nimport { Button } from \"./utilityComponents/Button\";\nimport { IconButton } from \"./utilityComponents/IconButton\";\n\nimport { ACTIONS, MODAL_WINDOW_ACTIONS } from \"../constants\";\nimport { ICON_CLASS_MAP } from \"../iconClassMap\";\n\n// Doubt: onModalWindowAction\nconst Todo = ({ todo, isSelected, onTodoAction, onModalWindowAction }) => {\n  // should i define all these  handlers here or they should be defined in TodoList?.\n  //Because, for All Todo Components there will be 4 function objects using the memory\n  // 100 Todos means 400 function objects.\n\n  const handleCompletionToggle = useCallback(() => {\n    onTodoAction({ type: ACTIONS.TOGGLE_COMPLETION, payload: { ids: todo.id } });\n  }, [todo, onTodoAction]);\n\n  const handleDeleteTodo = useCallback(\n    () => onTodoAction({ type: ACTIONS.DELETE, payload: { ids: todo.id } }),\n    [todo, onTodoAction]\n  );\n\n  const toggleTodoSelection = useCallback(\n    () => onTodoAction({ type: ACTIONS.TOGGLE_FROM_SELECTED, payload: { id: todo.id } }),\n    [todo.id, onTodoAction]\n  );\n\n  const handleEditTodo = useCallback(\n    () => onModalWindowAction({ type: MODAL_WINDOW_ACTIONS.SHOW, payload: { data: todo } }),\n    [todo, onModalWindowAction]\n  );\n\n  return (\n    <div\n      className={`todo mar8 pad8 b12 ${todo.completed ? \"reduced-opacity\" : \"original-opacity\"}`}\n    >\n      <div className=\"todo__topbar-btns\">\n        <IconButton\n          btnClass=\"todo__topbar-btns__extra-style alter-visibility\"\n          iconClass={ICON_CLASS_MAP[ACTIONS.EDIT]}\n          onClick={handleEditTodo}\n        />\n        <IconButton\n          btnClass=\"todo__topbar-btns__extra-style alter-visibility\"\n          iconClass={ICON_CLASS_MAP[ACTIONS.DELETE]}\n          onClick={handleDeleteTodo}\n        />\n      </div>\n      <div className=\"normal-bold-text align-center mar10\" style={{ fontSize: \"18px\" }}>\n        {todo.title}\n      </div>\n      <div className=\"normal-text align-center mar10\" style={{ fontSize: \"14px\" }}>\n        {todo.date}\n      </div>\n      <div className=\"align-center mar10\">\n        <i className={` ${ICON_CLASS_MAP[todo.urgency]} todo__preferences-icon mar8`}></i>\n        <i className={` ${ICON_CLASS_MAP[todo.category]} todo__preferences-icon mar8`}></i>\n      </div>\n      <Button\n        label={`${todo.completed ? \"Completed Undo?\" : \"Mark Completed\"}`}\n        onClick={handleCompletionToggle}\n        extraClasses=\"todo__toggle-complete-btn mar10\"\n      />\n      <button\n        className={` ${isSelected ? \"blue-circle\" : \"white-circle\"} mar8`}\n        onClick={toggleTodoSelection}\n      ></button>\n    </div>\n  );\n};\nconst _Todo = React.memo(Todo);\nexport { _Todo as Todo };\n","import { Todo } from \"./Todo\";\n\nconst TodoList = ({ todos, currentlySelectedIds, onTodoAction, onModalWindowAction }) => (\n  <>\n    {todos.length ? (\n      todos.map((todo) => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          isSelected={currentlySelectedIds.includes(todo.id)}\n          onTodoAction={onTodoAction}\n          onModalWindowAction={onModalWindowAction}\n        />\n      ))\n    ) : (\n      <div className=\"normal-bold-text cwhite top-mar8\">No todos to show</div>\n    )}\n  </>\n);\n\nexport { TodoList };\n","import React, { useState, useCallback } from \"react\";\n\nconst WithToolTip = ({ children, title }) => {\n  const [show, setShow] = useState(false);\n\n  const handleOnHover = useCallback(() => setShow(true), []);\n  const handleHoverOut = useCallback(() => setShow(false), []);\n\n  return (\n    <div\n      className=\"top-bottom-mar8\"\n      style={{ display: \"flex\", alignItems: \"center\" }}\n      onMouseOver={handleOnHover}\n      onMouseOut={handleHoverOut}\n    >\n      {children}\n      {show && <div className=\"hidden-label\">{title}</div>}\n    </div>\n  );\n};\nexport { WithToolTip };\n","import React, { useCallback } from \"react\";\n\nimport { IconButton } from \"./utilityComponents/IconButton\";\nimport { WithToolTip } from \"./utilityComponents/WithToolTip\";\n\nimport { BULK_ACTIONS, ACTIONS } from \"../constants\";\nimport { ICON_CLASS_MAP } from \"../iconClassMap\";\n\nconst BulkActionPanel = ({ currentlySelectedIds, onTodoAction }) => {\n  const handleBulkCompletionToggle = useCallback(() => {\n    onTodoAction({ type: ACTIONS.TOGGLE_COMPLETION, payload: { ids: currentlySelectedIds } });\n  }, [currentlySelectedIds, onTodoAction]);\n\n  const handleClearSelection = useCallback(\n    () => onTodoAction({ type: ACTIONS.RESET_SELECTED_IDS }),\n    [onTodoAction]\n  );\n\n  const handleBulkDelete = useCallback(\n    () =>\n      onTodoAction({\n        type: ACTIONS.DELETE,\n        payload: { ids: currentlySelectedIds },\n      }),\n    [currentlySelectedIds, onTodoAction]\n  );\n\n  return (\n    <div className=\"selection-btns fixed\">\n      <WithToolTip title={BULK_ACTIONS.TOGGLE_COMPLETION}>\n        <IconButton\n          btnClass=\"bg-light expand\"\n          iconClass={ICON_CLASS_MAP[BULK_ACTIONS.TOGGLE_COMPLETION]}\n          onClick={handleBulkCompletionToggle}\n        />\n      </WithToolTip>\n      <WithToolTip title={BULK_ACTIONS.CLEAR_SELECTION}>\n        <IconButton\n          btnClass=\"bg-light expand\"\n          iconClass={ICON_CLASS_MAP[BULK_ACTIONS.CLEAR_SELECTION]}\n          onClick={handleClearSelection}\n        />\n      </WithToolTip>\n      <WithToolTip title={BULK_ACTIONS.DELETE}>\n        <IconButton\n          btnClass=\"bg-light expand\"\n          iconClass={ICON_CLASS_MAP[BULK_ACTIONS.DELETE]}\n          onClick={handleBulkDelete}\n        />\n      </WithToolTip>\n    </div>\n  );\n};\nconst _BulkActionPanel = React.memo(BulkActionPanel);\nexport { _BulkActionPanel as BulkActionPanel };\n","import React from \"react\";\n\nexport const ModalWindow = ({ children }) => {\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__modal-content b12 pad12\">{children}</div>\n    </div>\n  );\n};\n","import React, { useCallback, useState } from \"react\";\n\nimport { TodoForm } from \"./TodoForm\";\nimport { Button } from \"./utilityComponents/Button\";\n\nimport { MODAL_WINDOW_ACTIONS, ACTIONS } from \"../constants\";\n\nconst EditTodoForm = ({ todo, onModalWindowAction, onTodoAction }) => {\n  const [todoData, setTodoData] = useState(todo);\n\n  const handleTodoDataChange = useCallback(\n    (event) =>\n      setTodoData((prevFormData) => ({\n        ...prevFormData,\n        [event.target.dataset.name]: event.target.value,\n      })),\n    []\n  );\n\n  const handleUpdate = useCallback(() => {\n    if (todoData.title === \"\") {\n      return;\n    }\n    onTodoAction({ type: ACTIONS.UPDATE, payload: { updatedTodos: todoData } });\n    onModalWindowAction({ type: MODAL_WINDOW_ACTIONS.CLOSE });\n  }, [onModalWindowAction, onTodoAction, todoData]);\n\n  const handleCancel = useCallback(\n    () => onModalWindowAction({ type: MODAL_WINDOW_ACTIONS.CLOSE }),\n    [onModalWindowAction]\n  );\n\n  return (\n    <>\n      <div className=\"cwhite normal-bold-text top-bottom-mar8\">Update Your Todo</div>\n      <TodoForm formData={todoData} onFormChange={handleTodoDataChange} />\n      <div>\n        <Button label=\"Update\" onClick={handleUpdate} />\n        <Button label=\"Cancel\" onClick={handleCancel} />\n      </div>\n    </>\n  );\n};\nconst _EditTodoForm = React.memo(EditTodoForm);\nexport { _EditTodoForm as EditTodoForm };\n","const createMockServer = () => {\n  let todos = [];\n\n  const getIndexInDatabase = (id) => todos.findIndex((todo) => todo.id === id);\n\n  const serverWorking = () => Math.random() <= 0.9999;\n\n  const updateLocalStorage = () => localStorage.setItem(\"todos\", JSON.stringify(todos));\n\n  return {\n    getTodosFromDatabase: () =>\n      new Promise((resolve, reject) => {\n        let storedTodos = JSON.parse(localStorage.getItem(\"todos\"));\n        const newTodos = [];\n        if (storedTodos) {\n          todos = [];\n          storedTodos.forEach((todo) => {\n            todos = todos.concat(todo);\n            newTodos.push({ ...todo });\n          });\n        }\n        resolve(newTodos);\n      }),\n\n    createTodoInDatabase: (newTodos) =>\n      new Promise((resolve, reject) => {\n        if (serverWorking()) {\n          const newTodosAsArray = Array.isArray(newTodos) ? newTodos : [newTodos];\n          newTodosAsArray.forEach((newTodo) => (todos = todos.concat({ ...newTodo })));\n          updateLocalStorage();\n          resolve();\n        } else {\n          reject(\"Opps!! something went wrong server side, plz try again after sometime\");\n        }\n      }),\n\n    updateTodoInDatabase: (updatedTodos) =>\n      new Promise((resolve, reject) => {\n        if (serverWorking()) {\n          const updatedTodosAsArray = Array.isArray(updatedTodos) ? updatedTodos : [updatedTodos];\n\n          updatedTodosAsArray.forEach((updatedTodo, i) => {\n            const index = getIndexInDatabase(updatedTodo.id);\n            todos = todos.slice(0, index).concat({ ...updatedTodo }, todos.slice(index + 1));\n          });\n          updateLocalStorage();\n          resolve();\n        } else {\n          reject(\"Opps!! Cannot update right now, plz try again after sometime\");\n        }\n      }),\n\n    deleteTodoFromDatabase: (ids) =>\n      new Promise((resolve, reject) => {\n        if (serverWorking()) {\n          const idsAsArray = Array.isArray(ids) ? ids : [ids];\n\n          idsAsArray.forEach((id) => {\n            const index = getIndexInDatabase(id);\n            todos = todos.slice(0, index).concat(todos.slice(index + 1));\n          });\n          updateLocalStorage();\n          resolve();\n        } else {\n          reject(\"Opps!! something went wrong while deleting TODO, plz try again after sometime\");\n        }\n      }),\n  };\n};\n\nexport const mockServer = createMockServer();\n","import { useCallback, useReducer, useContext, useRef, useEffect } from \"react\";\n\nimport { SnackbarContext } from \"../components/SnackbarProvider\";\n\nimport { mockServer } from \"../mockServer\";\nimport { ACTIONS } from \"../constants\";\n\nconst findIndexById = (todos, id) => todos.findIndex((todo) => todo.id === id);\n\nconst reducer = (state, action) => {\n  let index;\n  let todos;\n  switch (action.type) {\n    case ACTIONS.ADD:\n      todos = [...state.todos].concat(action.payload.newTodos);\n      return { ...state, todos };\n\n    case ACTIONS.UPDATE:\n      todos = [...state.todos];\n      action.payload.updatedTodos.forEach((updatedTodo) => {\n        index = findIndexById(todos, updatedTodo.id);\n        todos = todos.slice(0, index).concat(updatedTodo, todos.slice(index + 1));\n      });\n      return { ...state, todos };\n\n    case ACTIONS.DELETE:\n      todos = [...state.todos];\n      action.payload.ids.forEach((id) => {\n        index = findIndexById(todos, id);\n        todos = todos.slice(0, index).concat(todos.slice(index + 1));\n      });\n      return { ...state, todos };\n\n    case ACTIONS.TOGGLE_FROM_SELECTED:\n      index = state.currentlySelectedIds.indexOf(action.payload.id);\n      if (index === -1) {\n        return {\n          ...state,\n          currentlySelectedIds: state.currentlySelectedIds.concat(action.payload.id),\n        };\n      } else {\n        return {\n          ...state,\n          currentlySelectedIds: state.currentlySelectedIds\n            .slice(0, index)\n            .concat(state.currentlySelectedIds.slice(index + 1)),\n        };\n      }\n    case ACTIONS.RESET_SELECTED_IDS:\n      return { ...state, currentlySelectedIds: [] };\n\n    default:\n      return state;\n  }\n};\n\nconst INITIAL_TODOS_STATE = {\n  todos: [],\n  currentlySelectedIds: [],\n};\n\nexport const useTodosState = () => {\n  const [todosState, dispatch] = useReducer(reducer, INITIAL_TODOS_STATE);\n\n  const showSnackbar = useContext(SnackbarContext);\n  const showSnackbarRef = useRef();\n  showSnackbarRef.current = showSnackbar;\n\n  useEffect(\n    () =>\n      mockServer\n        .getTodosFromDatabase()\n        .then((todos) => {\n          dispatch({ type: ACTIONS.ADD, payload: { newTodos: todos } });\n        })\n        .catch(showSnackbarRef.current),\n    []\n  );\n\n  const onTodoAction = useCallback(\n    ({ type, payload }) => {\n      let updatedTodos;\n      let ids;\n\n      switch (type) {\n        case ACTIONS.ADD:\n          mockServer\n            .createTodoInDatabase(payload.newTodos)\n            .then(() => {\n              dispatch({\n                type: ACTIONS.ADD,\n                payload: {\n                  newTodos: Array.isArray(payload.newTodos) ? payload.newTodos : [payload.newTodos],\n                },\n              });\n            })\n            .catch(showSnackbar);\n          break;\n\n        case ACTIONS.UPDATE:\n          updatedTodos = payload.updatedTodos;\n          mockServer\n            .updateTodoInDatabase(updatedTodos)\n            .then(() => {\n              dispatch({\n                type: ACTIONS.UPDATE,\n                payload: {\n                  updatedTodos: Array.isArray(updatedTodos) ? updatedTodos : [updatedTodos],\n                },\n              });\n              if (Array.isArray(updatedTodos)) {\n                dispatch({ type: ACTIONS.RESET_SELECTED_IDS });\n              }\n            })\n            .catch(showSnackbar);\n          break;\n\n        case ACTIONS.DELETE:\n          ids = payload.ids;\n          mockServer\n            .deleteTodoFromDatabase(ids)\n            .then(() => {\n              dispatch({\n                type: ACTIONS.DELETE,\n                payload: { ids: Array.isArray(ids) ? ids : [ids] },\n              });\n              if (Array.isArray(ids)) {\n                dispatch({ type: ACTIONS.RESET_SELECTED_IDS });\n              }\n            })\n            .catch(showSnackbar);\n          break;\n\n        case ACTIONS.TOGGLE_COMPLETION:\n          ids = Array.isArray(payload.ids) ? payload.ids : [payload.ids];\n          updatedTodos = ids.map((id) => {\n            const index = findIndexById(todosState.todos, id);\n            return { ...todosState.todos[index], completed: !todosState.todos[index].completed };\n          });\n          mockServer\n            .updateTodoInDatabase(updatedTodos)\n            .then(() => {\n              dispatch({\n                type: ACTIONS.UPDATE,\n                payload: {\n                  updatedTodos: updatedTodos,\n                },\n              });\n              dispatch({ type: ACTIONS.RESET_SELECTED_IDS });\n            })\n            .catch(showSnackbar);\n          break;\n\n        case ACTIONS.TOGGLE_FROM_SELECTED:\n          dispatch({ type, payload });\n          break;\n        case ACTIONS.RESET_SELECTED_IDS:\n          dispatch({ type });\n          break;\n        default:\n          break;\n      }\n    },\n    [showSnackbar, todosState]\n  );\n\n  return { todosState, onTodoAction };\n};\n","import { useReducer } from \"react\";\n\nimport { FILTER_ACTIONS } from \"../constants\";\n\nconst INITIAL_FILTER_STATE = {\n  urgencyFilter: {},\n  categoryFilter: {},\n  //\n  isIncompleteEnabled: false,\n  searchValue: \"\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case FILTER_ACTIONS.UPDATE_URGENCY_FILTER:\n      const updatedUrgencyFilter = {\n        ...state.urgencyFilter,\n        [action.payload.type]: !state.urgencyFilter[action.payload.type],\n      };\n      return { ...state, urgencyFilter: updatedUrgencyFilter };\n\n    case FILTER_ACTIONS.UPDATE_CATEGORY_FILTER:\n      const updatedCategoryFilter = {\n        ...state.categoryFilter,\n        [action.payload.type]: !state.categoryFilter[action.payload.type],\n      };\n      return { ...state, categoryFilter: updatedCategoryFilter };\n\n    case FILTER_ACTIONS.TOGGLE_INCOMPLETE_ENABLED:\n      return { ...state, isIncompleteEnabled: !state.isIncompleteEnabled };\n\n    case FILTER_ACTIONS.UPDATE_SEARCH_VALUE:\n      return { ...state, searchValue: action.payload.newSearchValue };\n    default:\n      return state;\n  }\n};\n\nexport const useFilterState = () => {\n  const [filterState, onFilterAction] = useReducer(reducer, INITIAL_FILTER_STATE);\n\n  return { filterState, onFilterAction };\n};\n","import React, { useMemo } from \"react\";\n\nimport { FilterPanel } from \"./FilterPanel\";\nimport { Header } from \"./Header\";\nimport { CreateTodoForm } from \"./CreateTodoForm\";\nimport { Analytics } from \"./Analytics\";\nimport { TodoList } from \"./TodoList\";\nimport { BulkActionPanel } from \"./BulkActionPanel\";\nimport { ModalWindow } from \"./ModalWindow\";\nimport { EditTodoForm } from \"./EditTodoForm\";\n\nimport { useTodosState } from \"../hooks/useTodosState\";\nimport { useFilterState } from \"../hooks/useFilterState\";\nimport { useModalWindow } from \"../hooks/useModalWindow\";\nimport { useDate } from \"../hooks/useDate\";\n\nimport { validateTodoForFilter } from \"../filterValidationOnTodo\";\n\nimport \"../TodoApp.css\";\n\nexport const TodoApp = () => {\n  const { todosState, onTodoAction } = useTodosState();\n  const { filterState, onFilterAction } = useFilterState();\n  const { modalWindow, onModalWindowAction } = useModalWindow();\n  const { date } = useDate();\n\n  const filteredTodos = useMemo(\n    () => todosState.todos.filter((todo) => validateTodoForFilter(todo, filterState)),\n    [filterState, todosState]\n  );\n\n  return (\n    <>\n      <Header date={date} searchValue={filterState.searchValue} onFilterAction={onFilterAction} />\n      <div className=\"todo-app-body mar4\">\n        <div className=\"sidebar b8 pad8\">\n          <FilterPanel appliedFilter={filterState} onFilterAction={onFilterAction} />\n          <CreateTodoForm onTodoAction={onTodoAction} />\n          <Analytics todos={filteredTodos} />\n        </div>\n        <div className=\"todo-panel b8\">\n          <TodoList\n            todos={filteredTodos}\n            currentlySelectedIds={todosState.currentlySelectedIds}\n            onTodoAction={onTodoAction}\n            onModalWindowAction={onModalWindowAction}\n          />\n        </div>\n      </div>\n      <BulkActionPanel\n        currentlySelectedIds={todosState.currentlySelectedIds}\n        onTodoAction={onTodoAction}\n      />\n      {modalWindow.isOpen && (\n        <ModalWindow>\n          <EditTodoForm\n            todo={modalWindow.data}\n            onModalWindowAction={onModalWindowAction}\n            onTodoAction={onTodoAction}\n          />\n        </ModalWindow>\n      )}\n    </>\n  );\n};\n","import { useCallback, useState } from \"react\";\n\nimport { MODAL_WINDOW_ACTIONS } from \"../constants\";\n\n//\nexport const useModalWindow = () => {\n  const [modalWindow, SetModalWindow] = useState({\n    isOpen: false,\n  });\n\n  const onModalWindowAction = useCallback(({ type, payload }) => {\n    switch (type) {\n      case MODAL_WINDOW_ACTIONS.SHOW:\n        SetModalWindow({\n          isOpen: true,\n          data: payload.data,\n        });\n        break;\n\n      case MODAL_WINDOW_ACTIONS.CLOSE:\n        SetModalWindow({ isOpen: false });\n        break;\n\n      default:\n        break;\n    }\n  }, []);\n\n  return { modalWindow, onModalWindowAction };\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useDate = () => {\n  const [date, setDate] = useState(new Date().toDateString());\n\n  useEffect(() => {\n    setInterval(() => {\n      setDate(new Date().toDateString());\n    }, 60000);\n  }, []);\n\n  return { date };\n};\n","import { URGENCIES, CATEGORIES } from \"./constants.js\";\n\nexport const validateTodoForFilter = (todo, filterData) => {\n  //collecting all consitions's true/false value\n  const noUrgencyApplied = !(\n    filterData.urgencyFilter[URGENCIES.LOW] ||\n    filterData.urgencyFilter[URGENCIES.MEDIUM] ||\n    filterData.urgencyFilter[URGENCIES.HIGH]\n  );\n  const noCategoryApplied = !(\n    filterData.categoryFilter[CATEGORIES.PERSONAL] ||\n    filterData.categoryFilter[CATEGORIES.ACADEMIC] ||\n    filterData.categoryFilter[CATEGORIES.SOCIAL]\n  );\n\n  const isChecked = filterData.isIncompleteEnabled;\n  const isSatifiesSearchValue =\n    filterData.searchValue === \"\" || todo.title.toLowerCase().indexOf(filterData.searchValue) + 1;\n\n  return (\n    (filterData.urgencyFilter[todo.urgency] || noUrgencyApplied) &&\n    (filterData.categoryFilter[todo.category] || noCategoryApplied) &&\n    ((isChecked && !todo.completed) || !isChecked) &&\n    isSatifiesSearchValue\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { SnackbarProvider } from \"./components/SnackbarProvider\";\nimport { TodoApp } from \"./components/TodoApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider>\n      <TodoApp />\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}