{"version":3,"sources":["js/snackBar.js","js/constants.js","js/Components/Checkbox.js","js/Components/FilterPanel.js","js/Components/TextInput.js","js/Components/Header.js","js/Components/Dropdown.js","js/Components/TodoForm.js","js/Components/CreateTodoForm.js","js/Components/Analytics.js","js/Components/Todo.js","js/Components/TodoList.js","js/Components/BulkActionPanel.js","js/mockServer.js","js/CustomHooks/useTodosState.js","js/CustomHooks/useFilterState.js","js/Components/TodoApp.js","js/filterValidationOnTodo.js","index.js"],"names":["timeoutId","ACTIONS","BULK_ACTIONS","categories","PERSONAL","ACADEMIC","SOCIAL","urgencies","LOW","MEDIUM","HIGH","categoryIconClass","color","urgencyToColorMap","categoryToIconClassMap","todoFormInputs","filterPanelActions","Checkbox","React","memo","label","isChecked","handleChange","className","type","checked","onChange","UrgencyPanel","urgencyFilter","handleFilterUpdate","Object","entries","map","key","value","data-type","onClick","CategoryPanel","categoryFilter","FilterPanel","filterState","dispatch","toggleIsInCompleteEnabled","useCallback","handleUrgencyFilterUpdate","event","buttonElement","target","closest","payload","dataset","handleCategoryFilterUpdate","isIncompleteEnabled","TextInput","placeholder","name","extraClasses","data-name","AppTitleAndDate","Date","toDateString","SearchBar","searchValue","newSearchValue","Header","Dropdown","initialValue","values","keys","toUpperCase","slice","reducer","state","action","title","newValue","urgency","category","initialFormData","TodoForm","handleSubmit","useReducer","formData","handleFormChange","onSubmit","preventDefault","CreateTodoForm","onAction","data","newTodo","id","valueOf","date","toLocaleString","completed","Analytics","totalTodos","completedTodos","console","log","percentage","Math","round","Todo","todo","isSelected","style","fontSize","updatedTodo","TodoList","todos","currentlySelectedIds","indexOf","ButtonWithHiddenLabel","iconClass","display","alignItems","BulkActionPanel","showSnackbar","message","snackbar","document","querySelector","textContent","classList","add","prevTimeoutId","setTimeout","toggle","mockServer","getIndexInDatabase","findIndex","ID","serverWorking","random","getTodosFromDatabase","Promise","resolve","reject","storedTodos","JSON","parse","localStorage","getItem","newTodos","forEach","concat","push","storeTodosToDatabase","setItem","stringify","createTodoInDatabase","Array","isArray","updateTodoInDatabase","ids","updatedTodos","idsAsArray","updatedTodosAsArray","i","index","deleteTodoFromDatabase","createMockServer","initialtodosState","findIndexById","initialfilterState","TodoApp","todosState","addTodo","then","catch","updateTodo","deleteTodo","useTodosState","useFilterState","filteredTodos","filter","filterData","noUrgencyApplied","noCategoryApplied","isSatifiesSearchValue","toLowerCase","validateTodoForFilter","useMemo","length","data-id","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a33b3e53.chunk.js","sourcesContent":["let timeoutId;\n\nexport const showSnackbar = (message) => {\n  let snackbar = document.querySelector(\"[data-id=snackbar]\");\n  snackbar.textContent = message;\n\n  snackbar.classList.add(\"show\");\n\n  timeoutId = setTimeout(() => {\n    if (prevTimeoutId === timeoutId) {\n      snackbar.classList.toggle(\"show\");\n    }\n  }, 3000);\n  const prevTimeoutId = timeoutId;\n};\n","export const ACTIONS = {\n  //\n  TOGGLE_FROM_SELECTED: \"TOGGLE_FROM_SELECTED\",\n  EDIT: \"EDIT\",\n  ADD: \"ADD\",\n  UPDATE: \"UPDATE\",\n  DELETE: \"DELETE\",\n  SELECT: \"SELECT\",\n  MARK_COMPLETED: \"MARK_COMPLETED\",\n  ALTER_COMPLETION_IN_BULK: \"ALTER_COMPLETION_IN_BULK\",\n  DELETE_IN_BULK: \"DELETE_IN_BULK\",\n  RESET: \"RESET\",\n};\n\nexport const BULK_ACTIONS = {\n  TOGGLE_COMPLETION: \"Toggle completion\",\n  CLEAR_SELECTION: \"Clear selection\",\n  DELETE: \"Delete\",\n};\n\nexport const categories = {\n  PERSONAL: \"personal\",\n  ACADEMIC: \"academic\",\n  SOCIAL: \"social\",\n};\nexport const urgencies = {\n  LOW: \"low\",\n  MEDIUM: \"medium\",\n  HIGH: \"high\",\n};\nexport const categoryIconClass = {\n  USERALT: \"fa-user\",\n  BOOKOPEN: \"fa-book\",\n  USERS: \"fa-users\",\n};\n\nexport const color = {\n  GREEN: \"cgreen\",\n  YELLOW: \"cyellow\",\n  RED: \"cred\",\n};\n\nexport const urgencyToColorMap = {\n  [urgencies.LOW]: color.GREEN,\n  [urgencies.MEDIUM]: color.YELLOW,\n  [urgencies.HIGH]: color.RED,\n};\nexport const categoryToIconClassMap = {\n  [categories.PERSONAL]: categoryIconClass.USERALT,\n  [categories.ACADEMIC]: categoryIconClass.BOOKOPEN,\n  [categories.SOCIAL]: categoryIconClass.USERS,\n};\n\nexport const todoFormInputs = {\n  TITLE: \"TITLE\",\n  URGENCY: \"URGENCY\",\n  CATEGORY: \"CATEGORY\",\n};\n\nexport const filterPanelActions = {\n  UPDATE_URGENCY_FILTER: \"UPDATE_URGENCY_FILTER\",\n  UPDATE_CATEGORY_FILTER: \"UPDATE_CATEGORY_FILTER\",\n  TOGGLE_INCOMPLETE_ENABLED: \"TOGGLE_INCOMPLETE_ENABLED\",\n  UPDATE_SEARCH_VALUE: \"UPDATE_SEARCH_VALUE\",\n};\n\nexport const filterNames = {\n  URGENCY: \"urgency\",\n  CATEGORY: \"category\",\n};\n\nexport const INVALID_POSITION = -1;\n\nexport const urgencyOptions = [urgencies.LOW, urgencies.MEDIUM, urgencies.HIGH];\nexport const categoryOptions = [categories.PERSONAL, categories.ACADEMIC, categories.SOCIAL];\n","import React from \"react\";\n\nexport const Checkbox = React.memo(({ label, isChecked, handleChange }) => {\n  return (\n    <div className=\"check-box-row mar8 pad8\">\n      <input\n        type=\"checkbox\"\n        className=\"check-box mar8\"\n        checked={isChecked}\n        onChange={handleChange}\n      />\n      <div className=\"normal-bold-title\">{label}</div>\n    </div>\n  );\n});\n","import React, { useCallback } from \"react/cjs/react.development\";\nimport {\n  urgencies,\n  categories,\n  filterPanelActions,\n  urgencyToColorMap,\n  categoryToIconClassMap,\n} from \"../constants\";\nimport { Checkbox } from \"./Checkbox\";\n\nconst UrgencyPanel = React.memo(({ label, urgencyFilter, handleFilterUpdate }) => {\n  return (\n    <div className=\"filter-row top-bottom-pad8\">\n      <div className=\"normal-bold-title right-left-pad8\">{label}</div>\n      <div className=\"filter-btns\">\n        {Object.entries(urgencies).map(([key, value]) => {\n          return (\n            <button\n              key={key}\n              className={`icon-btn ${urgencyFilter[value] ? \"filter-btn-selected\" : \"\"}`}\n              data-type={value}\n              onClick={handleFilterUpdate}\n            >\n              <i className={`fa fa-exclamation-triangle ${urgencyToColorMap[value]}`}></i>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n});\n\nconst CategoryPanel = React.memo(({ label, categoryFilter, handleFilterUpdate }) => {\n  return (\n    <div className=\"filter-row top-bottom-pad8\">\n      <div className=\"normal-bold-title right-left-pad8\">{label}</div>\n      <div className=\"filter-btns\">\n        {Object.entries(categories).map(([key, value]) => {\n          return (\n            <button\n              key={key}\n              className={`icon-btn ${categoryFilter[value] ? \"filter-btn-selected\" : \"\"}`}\n              data-type={value}\n              onClick={handleFilterUpdate}\n            >\n              <i className={`fa ${categoryToIconClassMap[value]} cwhite`}></i>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n});\n\nexport const FilterPanel = React.memo(({ filterState, dispatch }) => {\n  // name\n  const toggleIsInCompleteEnabled = useCallback(\n    () => dispatch({ type: filterPanelActions.TOGGLE_INCOMPLETE_ENABLED }),\n    [dispatch]\n  );\n\n  const handleUrgencyFilterUpdate = useCallback(\n    (event) => {\n      const buttonElement = event.target.closest(\"[data-type]\");\n\n      if (buttonElement) {\n        dispatch({\n          type: filterPanelActions.UPDATE_URGENCY_FILTER,\n          payload: { type: buttonElement.dataset.type },\n        });\n      }\n    },\n    [dispatch]\n  );\n  const handleCategoryFilterUpdate = useCallback(\n    (event) => {\n      const buttonElement = event.target.closest(\"[data-type]\");\n\n      if (buttonElement) {\n        dispatch({\n          type: filterPanelActions.UPDATE_CATEGORY_FILTER,\n          payload: { type: buttonElement.dataset.type },\n        });\n      }\n    },\n    [dispatch]\n  );\n\n  return (\n    <div className=\"card b12 pad8 top-bottom-mar8\">\n      <UrgencyPanel\n        label=\"Urgency\"\n        urgencyFilter={filterState.urgencyFilter}\n        handleFilterUpdate={handleUrgencyFilterUpdate}\n      />\n      <CategoryPanel\n        label=\"Category\"\n        categoryFilter={filterState.categoryFilter}\n        handleFilterUpdate={handleCategoryFilterUpdate}\n      />\n      <Checkbox\n        label=\"Not Completed\"\n        isChecked={filterState.isIncompleteEnabled}\n        handleChange={toggleIsInCompleteEnabled}\n      />\n      <div className=\"normal-bold-title top-bottom-pad8\">Filter Todos</div>\n    </div>\n  );\n});\n","import React from \"react\";\n\nexport const TextInput = React.memo(({ value, handleChange, placeholder, name, extraClasses }) => (\n  <input\n    type=\"text\"\n    data-name={name}\n    className={`text-input mar8 pad12 ${extraClasses ? extraClasses : \"\"}`}\n    placeholder={placeholder}\n    value={value}\n    onChange={handleChange}\n  />\n));\n","import React from \"react\";\nimport { filterPanelActions } from \"../constants\";\nimport { TextInput } from \"./TextInput\";\n\nconst AppTitleAndDate = () => {\n  // Date will not get updated if Header does not re-render bcz of no prop changes.\n  return (\n    <div className=\"header__left b8\">\n      <div className=\"header__left__name\">Todo App</div>\n      <div className=\"header__left__date\">{new Date().toDateString()}</div>\n    </div>\n  );\n};\n\nconst SearchBar = React.memo(({ searchValue, dispatch }) => {\n  const handleSearchChange = (event) => {\n    dispatch({\n      type: filterPanelActions.UPDATE_SEARCH_VALUE,\n      payload: { newSearchValue: event.target.value },\n    });\n  };\n\n  const handleClearSearch = () => {\n    dispatch({ type: filterPanelActions.UPDATE_SEARCH_VALUE, payload: { newSearchValue: \"\" } });\n  };\n\n  return (\n    <div className=\"header__right\">\n      <TextInput\n        name=\"search\"\n        value={searchValue}\n        placeholder=\"search todos\"\n        handleChange={handleSearchChange}\n        extraClasses=\"header__right__search-input\"\n      />\n      <button className=\"green-btn mar8\" onClick={handleClearSearch}>\n        Clear\n      </button>\n    </div>\n  );\n});\n\nexport const Header = React.memo(({ searchValue, dispatch }) => {\n  return (\n    <div className=\"header b8 mar4\">\n      <AppTitleAndDate />\n      <SearchBar searchValue={searchValue} dispatch={dispatch} />\n    </div>\n  );\n});\n","import React from \"react\";\n\nexport const Dropdown = React.memo(({ name, initialValue, values, handleChange }) => {\n  return (\n    <select\n      data-name={name}\n      value={initialValue}\n      className=\"dropdown mar8 pad12\"\n      onChange={handleChange}\n    >\n      {Object.keys(values).map((key) => {\n        return (\n          <option key={key} value={values[key]}>\n            {values[key][0].toUpperCase() + values[key].slice(1)}\n          </option>\n        );\n      })}\n    </select>\n  );\n});\n","import React, { useReducer, useCallback } from \"react\";\nimport { urgencies, categories, todoFormInputs, ACTIONS } from \"../constants\";\nimport { TextInput } from \"./TextInput\";\nimport { Dropdown } from \"./Dropdown\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case todoFormInputs.TITLE:\n      return { ...state, title: action.payload.newValue };\n    case todoFormInputs.URGENCY:\n      return { ...state, urgency: action.payload.newValue };\n    case todoFormInputs.CATEGORY:\n      return { ...state, category: action.payload.newValue };\n    case ACTIONS.RESET:\n      return { ...action.payload.initialFormData };\n    default:\n      return state;\n  }\n};\n\n// reusable TodoForm, will use it in todo Edit Window too.\nexport const TodoForm = React.memo(({ initialFormData, handleSubmit }) => {\n  const [formData, dispatch] = useReducer(reducer, initialFormData);\n\n  const handleFormChange = useCallback((event) => {\n    dispatch({ type: event.target.dataset.name, payload: { newValue: event.target.value } });\n  }, []);\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(formData);\n    dispatch({ type: ACTIONS.RESET, payload: { initialFormData } });\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleFormSubmit}>\n      <div className=\"normal-bold-title mar8\">Title</div>\n      <TextInput\n        name={todoFormInputs.TITLE}\n        placeholder=\"Add Todo Title\"\n        value={formData.title}\n        handleChange={handleFormChange}\n      />\n\n      <div className=\"normal-bold-title mar8\">Urgency</div>\n      <Dropdown\n        name={todoFormInputs.URGENCY}\n        initialValue={formData.urgency}\n        values={urgencies}\n        handleChange={handleFormChange}\n      />\n\n      <div className=\"normal-bold-title mar8\">Category</div>\n      <Dropdown\n        name={todoFormInputs.CATEGORY}\n        initialValue={formData.category}\n        values={categories}\n        handleChange={handleFormChange}\n      />\n    </form>\n  );\n});\n","import React, { useReducer, useCallback } from \"react\";\nimport { urgencies, categories, todoFormInputs, ACTIONS } from \"../constants.js\";\nimport { TodoForm } from \"./TodoForm\";\n\nconst uuid = () => new Date().valueOf();\n\nconst createTodoObject = (data) => {\n  return {\n    id: uuid(),\n    date: new Date().toLocaleString(),\n    title: data.title || \"\",\n    urgency: data.urgency || urgencies.LOW,\n    category: data.category || categories.PERSONAL,\n    completed: false,\n  };\n};\n\nconst initialFormData = {\n  title: \"\",\n  urgency: urgencies.LOW,\n  category: categories.PERSONAL,\n};\n\nexport const CreateTodoForm = React.memo(({ onAction }) => {\n  const handleSubmit = useCallback(\n    (formData) => {\n      if (formData.title === \"\") {\n        return;\n      }\n      onAction({\n        type: ACTIONS.ADD,\n        payload: { newTodo: createTodoObject(formData) },\n      });\n    },\n    [onAction]\n  );\n\n  return (\n    <div className=\"card b12 pad12 top-bottom-mar8\">\n      <div className=\"create-todo-text mar8\">Create Todo</div>\n      <TodoForm initialFormData={initialFormData} handleSubmit={handleSubmit}></TodoForm>\n    </div>\n  );\n});\n","import React from \"react\";\n\nexport const Analytics = React.memo(({ totalTodos, completedTodos }) => {\n  console.log(\"Analytics\");\n  // useMemo?\n  const percentage = completedTodos === 0 ? 0 : Math.round((completedTodos / totalTodos) * 100);\n\n  return (\n    <div className=\"card b12 pad12 top-bottom-mar8\">\n      <div className=\"percentage-circle\">\n        <div className=\"percetage-text\">{percentage + \" %\"}</div>\n        <div className=\"ratio-text\">\n          {completedTodos} / {totalTodos}\n        </div>\n      </div>\n      <div className=\"normal-bold-title mar8\">Analytics</div>\n    </div>\n  );\n});\n","import React from \"react\";\n\nimport { urgencyToColorMap, categoryToIconClassMap, ACTIONS } from \"../constants\";\n\nexport const Todo = React.memo(({ todo, isSelected, onAction }) => {\n  const handleCompletionToggle = () => {\n    const updatedTodo = { ...todo, completed: !todo.completed };\n    onAction({ type: ACTIONS.UPDATE, payload: { updatedTodo } });\n  };\n\n  const handleDelete = () => {\n    onAction({ type: ACTIONS.DELETE, payload: { id: todo.id } });\n  };\n\n  const toggleTodoSelection = () => {\n    onAction({ type: ACTIONS.TOGGLE_FROM_SELECTED, payload: { id: todo.id } });\n  };\n\n  return (\n    <div\n      className={`todo mar8 pad8 b12 ${todo.completed ? \"reduced-opacity\" : \"original-opacity\"}`}\n    >\n      <div className=\"todo__topbar-btns\">\n        <button className=\"icon-btn todo__topbar-btns__extra-style alter-visibility\">\n          <i className=\"fa fa-pencil cwhite\"></i>\n        </button>\n        <button\n          className=\"icon-btn todo__topbar-btns__extra-style alter-visibility\"\n          onClick={handleDelete}\n        >\n          <i className=\"fa fa-trash cwhite\"></i>\n        </button>\n      </div>\n      <div className=\"normal-bold-title text-center mar10\" style={{ fontSize: \"18px\" }}>\n        {todo.title}\n      </div>\n      <div className=\"normal-title mar10\" style={{ fontSize: \"14px\" }}>\n        {todo.date}\n      </div>\n      <div className=\"mar10\">\n        <span className=\"todo__preferences-icon mar8\">\n          <i className={`fa fa-exclamation-triangle ${urgencyToColorMap[todo.urgency]}`}></i>\n        </span>\n        <span className=\"todo__preferences-icon mar8\">\n          <i className={`fa ${categoryToIconClassMap[todo.category]} cwhite`}></i>\n        </span>\n      </div>\n      <button\n        className=\"todo__toggle-complete-btn green-btn mar10\"\n        onClick={handleCompletionToggle}\n      >\n        {todo.completed ? \"Completed Undo?\" : \"Mark Completed\"}\n      </button>\n      <button\n        className={` ${isSelected ? \"blue-circle\" : \"white-circle\"} mar8`}\n        onClick={toggleTodoSelection}\n      ></button>\n    </div>\n  );\n});\n","import { Todo } from \"./Todo\";\n\nexport const TodoList = ({ todos, currentlySelectedIds, onAction }) => {\n  return (\n    <div className=\"col2 b8 pad8\">\n      {todos.map((todo) => {\n        const isSelected = currentlySelectedIds.indexOf(todo.id) !== -1;\n        return <Todo key={todo.id} todo={todo} isSelected={isSelected} onAction={onAction} />;\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { BULK_ACTIONS } from \"../constants\";\n\nconst ButtonWithHiddenLabel = ({ label, iconClass }) => {\n  return (\n    <div className=\"top-bottom-mar8\" style={{ display: \"flex\", alignItems: \"center\" }}>\n      <button className=\"icon-btn expand\">\n        <div className={`fa ${iconClass} cwhite`}></div>\n      </button>\n      <div className=\"hidden-label\">{label}</div>\n    </div>\n  );\n};\n\nexport const BulkActionPanel = React.memo(() => {\n  return (\n    <div className=\"selection-btns fixed\">\n      <ButtonWithHiddenLabel label={BULK_ACTIONS.TOGGLE_COMPLETION} iconClass={\"fa-check-square\"} />\n      <ButtonWithHiddenLabel label={BULK_ACTIONS.CLEAR_SELECTION} iconClass={\"fa-square-o\"} />\n      <ButtonWithHiddenLabel label={BULK_ACTIONS.DELETE} iconClass={\"fa-minus-square\"} />\n    </div>\n  );\n});\n","const createMockServer = () => {\n  let todos = [];\n\n  const getIndexInDatabase = (id) => todos.findIndex((todo) => todo.ID === id);\n\n  const serverWorking = () => Math.random() <= 0.98;\n\n  return {\n    getTodosFromDatabase: () =>\n      new Promise((resolve, reject) => {\n        let storedTodos = JSON.parse(localStorage.getItem(\"todos\"));\n        const newTodos = [];\n        if (storedTodos) {\n          todos = [];\n          storedTodos.forEach((todo) => {\n            todos = todos.concat(todo);\n            newTodos.push({ ...todo });\n          });\n        }\n        resolve(newTodos);\n      }),\n\n    storeTodosToDatabase: () =>\n      new Promise((resolve, reject) => {\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\n        resolve();\n      }),\n\n    createTodoInDatabase: (newTodos) =>\n      new Promise((resolve, reject) => {\n        if (serverWorking()) {\n          const newTodosAsArray = Array.isArray(newTodos) ? newTodos : [newTodos];\n          newTodosAsArray.forEach((newTodo) => (todos = todos.concat({ ...newTodo })));\n          resolve();\n        } else {\n          reject(\"Opps!! something went wrong server side, plz try again after sometime\");\n        }\n      }),\n\n    updateTodoInDatabase: (ids, updatedTodos) =>\n      new Promise((resolve, reject) => {\n        if (serverWorking()) {\n          const idsAsArray = Array.isArray(ids) ? ids : [ids];\n          const updatedTodosAsArray = Array.isArray(updatedTodos) ? updatedTodos : [updatedTodos];\n\n          idsAsArray.forEach((id, i) => {\n            const index = getIndexInDatabase(id);\n            todos = todos\n              .slice(0, index)\n              .concat({ ...updatedTodosAsArray[i] }, todos.slice(index + 1));\n          });\n          resolve();\n        } else {\n          reject(\"Opps!! Cannot update right now, plz try again after sometime\");\n        }\n      }),\n\n    deleteTodoFromDatabase: (ids) =>\n      new Promise((resolve, reject) => {\n        if (serverWorking()) {\n          const idsAsArray = Array.isArray(ids) ? ids : [ids];\n\n          idsAsArray.forEach((id) => {\n            const index = getIndexInDatabase(id);\n            todos = todos.slice(0, index).concat(todos.slice(index + 1));\n          });\n          resolve();\n        } else {\n          reject(\"Opps!! something went wrong while deleting TODO, plz try again after sometime\");\n        }\n      }),\n  };\n};\n\nexport const mockServer = createMockServer();\n","import { useCallback, useReducer } from \"react\";\nimport { ACTIONS } from \"../constants\";\nimport { showSnackbar } from \"../snackBar\";\nimport { mockServer } from \"../mockServer\";\n\nconst initialtodosState = {\n  todos: [],\n  currentlySelectedIds: [],\n};\nconst findIndexById = (todos, id) => todos.findIndex((todo) => todo.id === id);\n\nconst reducer = (state, action) => {\n  let index;\n  switch (action.type) {\n    case ACTIONS.ADD:\n      return { ...state, todos: state.todos.concat(action.payload.newTodo) };\n\n    case ACTIONS.UPDATE:\n      index = findIndexById(state.todos, action.payload.updatedTodo.id);\n      return {\n        ...state,\n        todos: state.todos\n          .slice(0, index)\n          .concat(action.payload.updatedTodo, state.todos.slice(index + 1)),\n      };\n\n    case ACTIONS.DELETE:\n      console.log(\"in delete\");\n      index = findIndexById(state.todos, action.payload.id);\n      console.log(index);\n      return {\n        ...state,\n        todos: state.todos.slice(0, index).concat(state.todos.slice(index + 1)),\n      };\n\n    case ACTIONS.TOGGLE_FROM_SELECTED:\n      index = state.currentlySelectedIds.indexOf(action.payload.id);\n      if (index === -1) {\n        return {\n          ...state,\n          currentlySelectedIds: state.currentlySelectedIds.concat(action.payload.id),\n        };\n      } else {\n        return {\n          ...state,\n          currentlySelectedIds: state.currentlySelectedIds\n            .slice(0, index)\n            .concat(state.currentlySelectedIds.slice(index + 1)),\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const useTodosState = () => {\n  const [todosState, dispatch] = useReducer(reducer, initialtodosState);\n\n  const addTodo = useCallback((newTodo) => {\n    mockServer\n      .createTodoInDatabase(newTodo)\n      .then(() => {\n        dispatch({ type: ACTIONS.ADD, payload: { newTodo } });\n      })\n      .catch(showSnackbar);\n  }, []);\n\n  const updateTodo = useCallback((updatedTodo) => {\n    mockServer\n      .updateTodoInDatabase(updatedTodo.ID, updatedTodo)\n      .then(() => {\n        dispatch({ type: ACTIONS.UPDATE, payload: { updatedTodo } });\n      })\n      .catch(showSnackbar);\n  }, []);\n\n  const deleteTodo = useCallback((id) => {\n    mockServer\n      .deleteTodoFromDatabase(id)\n      .then(() => {\n        dispatch({ type: ACTIONS.DELETE, payload: { id } });\n      })\n      .catch(showSnackbar);\n  }, []);\n\n  const onAction = useCallback(\n    ({ type, payload }) => {\n      switch (type) {\n        case ACTIONS.ADD:\n          addTodo(payload.newTodo);\n          break;\n        case ACTIONS.UPDATE:\n          updateTodo(payload.updatedTodo);\n          break;\n        case ACTIONS.DELETE:\n          deleteTodo(payload.id);\n          break;\n        case ACTIONS.TOGGLE_FROM_SELECTED:\n          dispatch({ type, payload });\n          break;\n        default:\n          break;\n      }\n    },\n    [addTodo, updateTodo, deleteTodo]\n  );\n\n  return [todosState, onAction];\n};\n","import { useReducer } from \"react\";\nimport { filterPanelActions } from \"../constants\";\n\nconst initialfilterState = {\n  urgencyFilter: {},\n  categoryFilter: {},\n  isIncompleteEnabled: false,\n  searchValue: \"\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case filterPanelActions.UPDATE_URGENCY_FILTER:\n      const urgencyFilter = { ...state.urgencyFilter };\n      urgencyFilter[action.payload.type] = !urgencyFilter[action.payload.type];\n      return { ...state, urgencyFilter };\n\n    case filterPanelActions.UPDATE_CATEGORY_FILTER:\n      const categoryFilter = { ...state.categoryFilter };\n      categoryFilter[action.payload.type] = !categoryFilter[action.payload.type];\n      return { ...state, categoryFilter };\n\n    case filterPanelActions.TOGGLE_INCOMPLETE_ENABLED:\n      return { ...state, isIncompleteEnabled: !state.isIncompleteEnabled };\n\n    case filterPanelActions.UPDATE_SEARCH_VALUE:\n      return { ...state, searchValue: action.payload.newSearchValue };\n    default:\n      return state;\n  }\n};\n\nexport const useFilterState = () => {\n  const [filterState, dispatch] = useReducer(reducer, initialfilterState);\n\n  return [filterState, dispatch];\n};\n","import \"../../TodoApp.css\";\nimport { useMemo } from \"react\";\nimport { FilterPanel } from \"./FilterPanel\";\nimport { Header } from \"./Header\";\nimport { CreateTodoForm } from \"./CreateTodoForm\";\nimport { Analytics } from \"./Analytics\";\nimport { TodoList } from \"./TodoList\";\nimport { BulkActionPanel } from \"./BulkActionPanel\";\nimport { useTodosState } from \"../CustomHooks/useTodosState\";\nimport { useFilterState } from \"../CustomHooks/useFilterState\";\nimport { validateTodoForFilter } from \"../filterValidationOnTodo\";\n\nconst TodoApp = () => {\n  const [todosState, onAction] = useTodosState();\n  const [filterState, dispatch] = useFilterState();\n\n  // useCallback ? TodoApp will re-render only when todosState or filterState is changed.\n  const filteredTodos = todosState.todos.filter((todo) => validateTodoForFilter(todo, filterState));\n\n  const totalTodos = useMemo(() => filteredTodos.length, [filteredTodos.length]);\n  const completedTodos = useMemo(() => filteredTodos.filter((todo) => todo.completed).length, [\n    filteredTodos,\n  ]);\n\n  return (\n    <>\n      <Header searchValue={filterState.searchValue} dispatch={dispatch} />\n      <div className=\"todo-app-body mar4\">\n        <div className=\"col1 b8 pad8\">\n          <FilterPanel filterState={filterState} dispatch={dispatch} />\n          <CreateTodoForm onAction={onAction} />\n          <Analytics totalTodos={totalTodos} completedTodos={completedTodos} />\n        </div>\n        <TodoList\n          todos={filteredTodos}\n          currentlySelectedIds={todosState.currentlySelectedIds}\n          onAction={onAction}\n        />\n      </div>\n      <BulkActionPanel />\n      <div className=\"snackbar\" data-id=\"snackbar\"></div>\n    </>\n  );\n};\n\nexport default TodoApp;\n","import { urgencies, categories } from \"./constants.js\";\nexport const validateTodoForFilter = (todo, filterData) => {\n  //collecting all consitions's true/false value\n  const noUrgencyApplied = !(\n    filterData.urgencyFilter[urgencies.LOW] ||\n    filterData.urgencyFilter[urgencies.MEDIUM] ||\n    filterData.urgencyFilter[urgencies.HIGH]\n  );\n  const noCategoryApplied = !(\n    filterData.categoryFilter[categories.PERSONAL] ||\n    filterData.categoryFilter[categories.ACADEMIC] ||\n    filterData.categoryFilter[categories.SOCIAL]\n  );\n\n  const isChecked = filterData.isIncompleteEnabled;\n  const isSatifiesSearchValue =\n    filterData.searchValue === \"\" || todo.title.toLowerCase().indexOf(filterData.searchValue) + 1;\n\n  return (\n    (filterData.urgencyFilter[todo.urgency] || noUrgencyApplied) &&\n    (filterData.categoryFilter[todo.category] || noCategoryApplied) &&\n    ((isChecked && !todo.completed) || !isChecked) &&\n    isSatifiesSearchValue\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport TodoApp from \"./js/Components/TodoApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}