{"version":3,"sources":["components/SnackbarProvider.js","components/utilityComponents/Checkbox.js","components/utilityComponents/IconButton.js","constants.js","iconClassMap.js","components/FilterPanel.js","components/utilityComponents/TextInput.js","components/utilityComponents/Button.js","components/Header.js","components/utilityComponents/Dropdown.js","components/TodoForm.js","components/CreateTodoForm.js","components/Analytics.js","components/Todo.js","components/TodoList.js","components/utilityComponents/Tooltip.js","components/BulkActionPanel.js","components/ModalWindow.js","components/EditTodoForm.js","mockServer.js","hooks/useTodosState.js","hooks/useFilterState.js","components/TodoApp.js","hooks/useModalWindow.js","hooks/useDate.js","helpers.js","index.js"],"names":["SnackbarContext","React","createContext","SnackbarProvider","children","useState","show","message","undefined","snackBarState","setSnackbarState","timeoutId","useRef","showSnackbar","useCallback","clearTimeout","current","setTimeout","Provider","value","className","Checkbox","memo","label","labelColorClass","isChecked","onChange","type","checked","displayName","IconButton","dataType","btnClass","iconClass","onClick","data-type","ACTIONS","BULK_ACTIONS","MODAL_WINDOW_ACTIONS","CATEGORIES","PERSONAL","ACADEMIC","SOCIAL","URGENCIES","LOW","MEDIUM","HIGH","TODO_FORM_INPUTS","TITLE","URGENCY","CATEGORY","FILTER_ACTIONS","ICON_CLASS_MAP","IconGroup","types","filter","onFilterUpdate","Object","entries","map","key","FilterPanel","appliedFilter","onFilterAction","toggleShowInComplete","updateUrgencyFilter","event","buttonElement","target","closest","payload","dataset","updateCategoryFilter","urgencyFilter","categoryFilter","showInComplete","TextInput","placeholder","name","extraClasses","data-name","Button","HeaderTitleAndDate","date","SearchBar","searchValue","handleSearchChange","newSearchValue","handleClearSearch","Header","Dropdown","initialValue","values","toUpperCase","slice","TodoForm","formData","onFormChange","toLocaleLowerCase","title","urgency","category","createTodoObject","id","Date","valueOf","toLocaleString","completed","INITIAL_FORM_DATA","CreateTodoForm","onTodoAction","setFormData","handleFormChange","prevFormData","handleSubmit","newTodos","Analytics","todos","totalTodos","length","completedTodos","useMemo","todo","percentage","Math","round","_Analytics","Todo","isSelected","onModalWindowAction","handleCompletionToggle","ids","handleDeleteTodo","toggleTodoSelection","handleEditTodo","data","style","fontSize","TodoList","currentlySelectedIds","includes","Tooltip","setShow","handleOnHover","handleHoverOut","display","alignItems","onMouseOver","onMouseOut","BulkActionPanel","handleBulkCompletionToggle","handleClearSelection","handleBulkDelete","ModalWindow","CLOSE","EditTodoForm","todoData","setTodoData","handleTodoDataChange","prevTodoData","handleUpdate","updatedTodos","mockServer","getIndexInDatabase","findIndex","serverWorking","random","updateLocalStorage","localStorage","setItem","JSON","stringify","getTodosFromDatabase","Promise","resolve","reject","storedTodos","parse","getItem","forEach","concat","push","createTodoInDatabase","Array","isArray","newTodo","updateTodoInDatabase","updatedTodo","i","index","deleteTodoFromDatabase","createMockServer","findIndexById","reducer","state","action","indexInTodos","INITIAL_TODOS_STATE","INITIAL_FILTERS","TodoAppBody","filters","onAction","TodoApp","useReducer","todosState","dispatch","useContext","showSnackbarRef","useEffect","then","catch","useTodosState","setFilters","updatedUrgencyFilter","updatedCategoryFilter","useFilterState","isOpen","modalWindow","setModalWindow","useModalWindow","toDateString","setDate","setInterval","useDate","filteredTodos","filterData","noUrgencyApplied","noCategoryApplied","isSatifiesSearchValue","toLowerCase","indexOf","validateTodoForFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5da09395.chunk.js","sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\n\nconst SnackbarContext = React.createContext();\n\nconst SnackbarProvider = ({ children }) => {\n  const [snackBarState, setSnackbarState] = useState({ show: false, message: undefined });\n\n  const timeoutId = useRef();\n\n  const showSnackbar = useCallback((message) => {\n    clearTimeout(timeoutId.current);\n    setSnackbarState({ show: true, message });\n    timeoutId.current = setTimeout(() => {\n      setSnackbarState({ show: false, message: undefined });\n    }, 3000);\n  }, []);\n\n  return (\n    <SnackbarContext.Provider value={showSnackbar}>\n      {children}\n      {snackBarState.show && <div className=\"snackbar\">{snackBarState.message}</div>}\n    </SnackbarContext.Provider>\n  );\n};\n\nexport { SnackbarContext };\nexport { SnackbarProvider };\n","import React from \"react\";\n\nconst Checkbox = React.memo(({ label, labelColorClass, isChecked, onChange }) => (\n  <div className=\"check-box-row mar8 pad8\">\n    <input type=\"checkbox\" className=\"check-box mar8\" checked={isChecked} onChange={onChange} />\n    <div className={`normal-bold-text ${labelColorClass}`}>{label}</div>\n  </div>\n));\n\nCheckbox.displayName = \"Checkbox\";\nexport { Checkbox };\n","import React from \"react\";\n\nconst IconButton = React.memo(({ dataType, btnClass, iconClass, onClick }) => {\n  return (\n    <button className={`icon-btn ${btnClass}`} data-type={dataType} onClick={onClick}>\n      <i className={iconClass}></i>\n    </button>\n  );\n});\nIconButton.displayName = \"IconButton\";\n\nexport { IconButton };\n","export const ACTIONS = {\n  INIT: \"INIT\",\n  EDIT: \"EDIT\",\n  ADD: \"ADD\",\n  UPDATE: \"UPDATE\",\n  DELETE: \"DELETE\",\n  SELECT: \"SELECT\",\n  TOGGLE_FROM_SELECTED: \"TOGGLE_FROM_SELECTED\",\n  TOGGLE_COMPLETION: \"TOGGLE_COMPLETION\",\n  ALTER_COMPLETION_IN_BULK: \"ALTER_COMPLETION_IN_BULK\",\n  DELETE_IN_BULK: \"DELETE_IN_BULK\",\n  RESET: \"RESET\",\n  RESET_SELECTED_IDS: \"RESET_SELECTED_IDS\",\n};\n\nexport const BULK_ACTIONS = {\n  TOGGLE_COMPLETION: \"Toggle completion\",\n  CLEAR_SELECTION: \"Clear selection\",\n  DELETE: \"Delete\",\n};\n\nexport const MODAL_WINDOW_ACTIONS = {\n  SHOW: \"SHOW\",\n  CLOSE: \"CLOSE\",\n  UPDATE_DATA: \"UPDATE_DATA\",\n};\n\nexport const HISTORY_ACTIONS = {\n  ADD_ACTIONS: \"ADD_ACTION\",\n  UNDO_SUCCESS: \"UNDO_SUCCESS\",\n  REDO_SUCCESS: \"REDO_SUCCESS\",\n};\n\n//\nexport const CATEGORIES = {\n  PERSONAL: \"personal\",\n  ACADEMIC: \"academic\",\n  SOCIAL: \"social\",\n};\nexport const URGENCIES = {\n  LOW: \"low\",\n  MEDIUM: \"medium\",\n  HIGH: \"high\",\n};\n\nexport const TODO_FORM_INPUTS = {\n  TITLE: \"Title\",\n  URGENCY: \"Urgency\",\n  CATEGORY: \"Category\",\n};\n\nexport const FILTER_ACTIONS = {\n  UPDATE_URGENCY_FILTER: \"UPDATE_URGENCY_FILTER\",\n  UPDATE_CATEGORY_FILTER: \"UPDATE_CATEGORY_FILTER\",\n  TOGGLE_SHOW_INCOMPLETE: \"TOGGLE_SHOW_INCOMPLETE\",\n  UPDATE_SEARCH_VALUE: \"UPDATE_SEARCH_VALUE\",\n};\n\nexport const INVALID_POSITION = -1;\n","import { ACTIONS, BULK_ACTIONS, URGENCIES, CATEGORIES } from \"./constants\";\n\nexport const ICON_CLASS_MAP = {\n  [BULK_ACTIONS.TOGGLE_COMPLETION]: \"fa fa-check-square\",\n  [BULK_ACTIONS.CLEAR_SELECTION]: \"fa fa-square-o\",\n  [BULK_ACTIONS.DELETE]: \"fa fa-minus-square\",\n  [URGENCIES.LOW]: \"fa fa-exclamation-triangle cgreen\",\n  [URGENCIES.MEDIUM]: \"fa fa-exclamation-triangle cyellow\",\n  [URGENCIES.HIGH]: \"fa fa-exclamation-triangle cred\",\n  [CATEGORIES.PERSONAL]: \"fa fa-user\",\n  [CATEGORIES.ACADEMIC]: \"fa fa-book\",\n  [CATEGORIES.SOCIAL]: \"fa fa-users\",\n  [ACTIONS.EDIT]: \"fa fa-pencil\",\n  [ACTIONS.DELETE]: \"fa fa-trash\",\n  [ACTIONS.ADD]: \"fa fa-plus\",\n  CLOSE: \"fa fa-times\",\n};\n","import React, { useCallback } from \"react\";\n\nimport { Checkbox } from \"./utilityComponents/Checkbox\";\nimport { IconButton } from \"./utilityComponents/IconButton\";\n\nimport { URGENCIES, CATEGORIES, FILTER_ACTIONS } from \"../constants\";\nimport { ICON_CLASS_MAP } from \"../iconClassMap\";\n\nconst IconGroup = React.memo(({ label, types, filter, onFilterUpdate }) => (\n  <div className=\"filter-row top-bottom-pad8\">\n    <div className=\"normal-bold-text cwhite pad8\">{label}</div>\n    <div className=\"filter-btns\">\n      {Object.entries(types).map(([key, value]) => {\n        const btnClass = `right-left-mar8 ${filter[value] ? \"filter-btn-selected\" : \"\"}`;\n        const iconClass = `${label === \"Category\" ? \"cwhite\" : \"\"}`;\n        return (\n          <IconButton\n            key={key}\n            btnClass={btnClass}\n            dataType={value}\n            iconClass={`${ICON_CLASS_MAP[value]} ${iconClass}`}\n            onClick={onFilterUpdate}\n          />\n        );\n      })}\n    </div>\n  </div>\n));\nIconGroup.displayName = \"IconGroup\";\n\nconst FilterPanel = React.memo(({ appliedFilter, onFilterAction }) => {\n  //Doubt: name\n  const toggleShowInComplete = useCallback(\n    () => onFilterAction({ type: FILTER_ACTIONS.TOGGLE_SHOW_INCOMPLETE }),\n    [onFilterAction]\n  );\n\n  //\n  const updateUrgencyFilter = useCallback(\n    (event) => {\n      const buttonElement = event.target.closest(\"[data-type]\");\n\n      if (buttonElement) {\n        onFilterAction({\n          type: FILTER_ACTIONS.UPDATE_URGENCY_FILTER,\n          payload: { type: buttonElement.dataset.type },\n        });\n      }\n    },\n    [onFilterAction]\n  );\n  const updateCategoryFilter = useCallback(\n    (event) => {\n      const buttonElement = event.target.closest(\"[data-type]\");\n\n      if (buttonElement) {\n        onFilterAction({\n          type: FILTER_ACTIONS.UPDATE_CATEGORY_FILTER,\n          payload: { type: buttonElement.dataset.type },\n        });\n      }\n    },\n    [onFilterAction]\n  );\n\n  return (\n    <div className=\"card b12 pad8\">\n      <IconGroup\n        label=\"Urgency\"\n        types={URGENCIES}\n        filter={appliedFilter.urgencyFilter}\n        onFilterUpdate={updateUrgencyFilter}\n      />\n      <IconGroup\n        label=\"Category\"\n        types={CATEGORIES}\n        filter={appliedFilter.categoryFilter}\n        onFilterUpdate={updateCategoryFilter}\n      />\n      <Checkbox\n        label=\"Incomplete Todos\"\n        labelColorClass=\"cwhite\"\n        isChecked={appliedFilter.showInComplete}\n        onChange={toggleShowInComplete}\n      />\n      <div className=\"normal-bold-text cwhite top-bottom-pad8\">Filter Todos</div>\n    </div>\n  );\n});\nFilterPanel.displayName = \"FilterPanel\";\nexport { FilterPanel };\n","import React from \"react\";\n\nconst TextInput = React.memo(({ value, onChange, placeholder, name, extraClasses }) => (\n  <input\n    type=\"text\"\n    data-name={name}\n    value={value}\n    className={`text-input mar8 pad12 ${extraClasses ? extraClasses : \"\"}`}\n    placeholder={placeholder}\n    onChange={onChange}\n  />\n));\nTextInput.displayName = \"Text Input\";\nexport { TextInput };\n","import React from \"react\";\n\nconst Button = React.memo(({ label, onClick, extraClasses }) => (\n  <button className={`green-btn mar8 ${extraClasses}`} onClick={onClick}>\n    {label}\n  </button>\n));\nButton.displayName = \"Button\";\n\nexport { Button };\n","import React, { useCallback } from \"react\";\n\nimport { TextInput } from \"./utilityComponents/TextInput\";\nimport { Button } from \"./utilityComponents/Button\";\n\nimport { FILTER_ACTIONS } from \"../constants\";\n\nconst HeaderTitleAndDate = React.memo(({ date }) => (\n  <div className=\"header__left\">\n    <div className=\"header__left__name\">Todo App</div>\n    <div className=\"header__left__date\">{date}</div>\n  </div>\n));\nHeaderTitleAndDate.displayName = \"TitleAndDate\";\n\nconst SearchBar = React.memo(({ searchValue, onFilterAction }) => {\n  const handleSearchChange = useCallback(\n    (event) =>\n      onFilterAction({\n        type: FILTER_ACTIONS.UPDATE_SEARCH_VALUE,\n        payload: { newSearchValue: event.target.value },\n      }),\n    [onFilterAction]\n  );\n\n  const handleClearSearch = useCallback(\n    () =>\n      onFilterAction({\n        type: FILTER_ACTIONS.UPDATE_SEARCH_VALUE,\n        payload: { newSearchValue: \"\" },\n      }),\n    [onFilterAction]\n  );\n\n  return (\n    <div className=\"header__right\">\n      <TextInput\n        name=\"search\"\n        value={searchValue}\n        placeholder=\"search todos\"\n        onChange={handleSearchChange}\n        extraClasses=\"header__right__search-input\"\n      />\n      <Button label=\"Clear\" onClick={handleClearSearch} />\n    </div>\n  );\n});\nSearchBar.displayName = \"SearchBar\";\n\nconst Header = React.memo(({ date, searchValue, onFilterAction }) => (\n  <div className=\"header\">\n    <HeaderTitleAndDate date={date} />\n    <SearchBar searchValue={searchValue} onFilterAction={onFilterAction} />\n  </div>\n));\nHeader.displayName = \"Header\";\n\nexport { Header };\n","import React from \"react\";\n\nconst Dropdown = React.memo(({ name, initialValue, values, onChange }) => (\n  <select data-name={name} value={initialValue} className=\"dropdown mar8 pad12\" onChange={onChange}>\n    {Object.entries(values).map(([key, value]) => (\n      <option key={key} value={value}>\n        {value[0].toUpperCase() + value.slice(1)}\n      </option>\n    ))}\n  </select>\n));\nDropdown.displayName = \"Dropdown\";\nexport { Dropdown };\n","import React from \"react\";\n\nimport { TextInput } from \"./utilityComponents/TextInput\";\nimport { Dropdown } from \"./utilityComponents/Dropdown\";\n\nimport { URGENCIES, CATEGORIES, TODO_FORM_INPUTS } from \"../constants\";\n\nconst TodoForm = ({ formData, onFormChange }) => (\n  <div className=\"form\">\n    <TextInput\n      name={TODO_FORM_INPUTS.TITLE.toLocaleLowerCase()}\n      value={formData.title}\n      placeholder=\"Add Todo Title\"\n      onChange={onFormChange}\n    />\n\n    <div className=\"normal-bold-text cwhite mar8\">{TODO_FORM_INPUTS.URGENCY}</div>\n    <Dropdown\n      name={TODO_FORM_INPUTS.URGENCY.toLocaleLowerCase()}\n      initialValue={formData.urgency}\n      values={URGENCIES}\n      onChange={onFormChange}\n    />\n\n    <div className=\"normal-bold-text cwhite mar8\">{TODO_FORM_INPUTS.CATEGORY}</div>\n    <Dropdown\n      name={TODO_FORM_INPUTS.CATEGORY.toLocaleLowerCase()}\n      initialValue={formData.category}\n      values={CATEGORIES}\n      onChange={onFormChange}\n    />\n  </div>\n);\n\nexport { TodoForm };\n","import React, { useCallback, useState } from \"react\";\n\nimport { TodoForm } from \"./TodoForm\";\nimport { IconButton } from \"./utilityComponents/IconButton\";\n\nimport { URGENCIES, CATEGORIES, ACTIONS } from \"../constants\";\nimport { ICON_CLASS_MAP } from \"../iconClassMap\";\n\nconst uuid = () => new Date().valueOf();\n\nconst createTodoObject = ({ title, urgency = URGENCIES.LOW, category = CATEGORIES.PERSONAL }) => ({\n  id: uuid(),\n  date: new Date().toLocaleString(),\n  title: title,\n  urgency: urgency,\n  category: category,\n  completed: false,\n});\n\nconst INITIAL_FORM_DATA = {\n  title: \"\",\n  urgency: URGENCIES.LOW,\n  category: CATEGORIES.PERSONAL,\n};\n\nconst CreateTodoForm = React.memo(({ onTodoAction }) => {\n  // single useState\n  const [formData, setFormData] = useState(INITIAL_FORM_DATA);\n\n  const handleFormChange = useCallback(\n    (event) =>\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        [event.target.dataset.name]: event.target.value,\n      })),\n    []\n  );\n\n  const handleSubmit = useCallback(() => {\n    if (formData.title === \"\") {\n      return;\n    }\n    onTodoAction({\n      type: ACTIONS.ADD,\n      payload: { newTodos: createTodoObject(formData) },\n    });\n    setFormData(INITIAL_FORM_DATA);\n  }, [onTodoAction, formData]);\n\n  return (\n    <div className=\"card b12 pad8 top-mar8\">\n      <div className=\"create-todo-text\">Create Todo</div>\n      <TodoForm formData={formData} onFormChange={handleFormChange}></TodoForm>\n      <IconButton\n        btnClass=\"todo-add-btn mar8\"\n        iconClass={`${ICON_CLASS_MAP[ACTIONS.ADD]} cwhite`}\n        onClick={handleSubmit}\n      />\n    </div>\n  );\n});\nCreateTodoForm.displayName = \"CreateTodoForm\";\nexport { CreateTodoForm };\n","import React, { useMemo } from \"react\";\n\nconst Analytics = ({ todos }) => {\n  const totalTodos = todos.length;\n  const completedTodos = useMemo(() => todos.filter((todo) => todo.completed).length, [todos]);\n\n  const percentage = totalTodos === 0 ? 0 : Math.round((completedTodos / totalTodos) * 100);\n\n  return (\n    <div className=\"card b12 pad8 top-mar8\">\n      <div className=\"percentage-circle\">\n        <div className=\"percetage-text\">{percentage + \" %\"}</div>\n        <div className=\"ratio-text\">\n          {completedTodos} / {totalTodos}\n        </div>\n      </div>\n      <div className=\"normal-bold-text cwhite top-bottom-mar8\">Analytics</div>\n    </div>\n  );\n};\nconst _Analytics = React.memo(Analytics);\nexport { _Analytics as Analytics };\n","import React, { useCallback } from \"react\";\n\nimport { Button } from \"./utilityComponents/Button\";\nimport { IconButton } from \"./utilityComponents/IconButton\";\n\nimport { ACTIONS, MODAL_WINDOW_ACTIONS } from \"../constants\";\nimport { ICON_CLASS_MAP } from \"../iconClassMap\";\n\nconst Todo = React.memo(({ todo, isSelected, onTodoAction, onModalWindowAction }) => {\n  // should i define all these  handlers here or they should be defined in TodoList?.\n  //Because, for All Todo Components there will be 4 function objects using the memory\n  // 100 Todos means 400 function objects.\n\n  const handleCompletionToggle = useCallback(() => {\n    onTodoAction({ type: ACTIONS.TOGGLE_COMPLETION, payload: { ids: todo.id } });\n  }, [todo, onTodoAction]);\n\n  const handleDeleteTodo = useCallback(\n    () => onTodoAction({ type: ACTIONS.DELETE, payload: { ids: todo.id } }),\n    [todo, onTodoAction]\n  );\n\n  const toggleTodoSelection = useCallback(\n    () => onTodoAction({ type: ACTIONS.TOGGLE_FROM_SELECTED, payload: { id: todo.id } }),\n    [todo.id, onTodoAction]\n  );\n\n  const handleEditTodo = useCallback(\n    () => onModalWindowAction({ type: MODAL_WINDOW_ACTIONS.SHOW, payload: { data: todo } }),\n    [todo, onModalWindowAction]\n  );\n\n  return (\n    <div\n      className={`todo cwhite mar8 pad8 b12 ${\n        todo.completed ? \"reduced-opacity\" : \"original-opacity\"\n      }`}\n    >\n      <div className=\"todo__topbar-btns\">\n        <IconButton\n          btnClass=\"todo__topbar-btns__extra-style alter-visibility\"\n          iconClass={`${ICON_CLASS_MAP[ACTIONS.EDIT]} cwhite`}\n          onClick={handleEditTodo}\n        />\n        <IconButton\n          btnClass=\"todo__topbar-btns__extra-style alter-visibility\"\n          iconClass={`${ICON_CLASS_MAP[ACTIONS.DELETE]} cwhite`}\n          onClick={handleDeleteTodo}\n        />\n      </div>\n      <div className=\"normal-bold-text align-center mar10\" style={{ fontSize: \"18px\" }}>\n        {todo.title}\n      </div>\n      <div className=\"align-center mar10\" style={{ fontSize: \"14px\" }}>\n        {todo.date}\n      </div>\n      <div className=\"align-center mar10\">\n        <i className={`${ICON_CLASS_MAP[todo.urgency]} todo__preferences-icon mar8`}></i>\n        <i className={`${ICON_CLASS_MAP[todo.category]} cwhite todo__preferences-icon mar8`}></i>\n      </div>\n      <Button\n        label={`${todo.completed ? \"Completed Undo?\" : \"Mark Completed\"}`}\n        onClick={handleCompletionToggle}\n        extraClasses=\"todo__toggle-complete-btn mar10\"\n      />\n      <button\n        className={` ${isSelected ? \"blue-circle\" : \"white-circle\"} mar8`}\n        onClick={toggleTodoSelection}\n      ></button>\n    </div>\n  );\n});\nTodo.displayName = \"Todo\";\nexport { Todo };\n","import { Todo } from \"./Todo\";\n\nconst TodoList = ({ todos, currentlySelectedIds, onTodoAction, onModalWindowAction }) => (\n  <>\n    {todos.length ? (\n      todos.map((todo) => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          isSelected={currentlySelectedIds.includes(todo.id)}\n          onTodoAction={onTodoAction}\n          onModalWindowAction={onModalWindowAction}\n        />\n      ))\n    ) : (\n      <div className=\"normal-bold-text cwhite top-mar8\">No todos to show</div>\n    )}\n  </>\n);\n\nexport { TodoList };\n","import React, { useState, useCallback } from \"react\";\n\nconst Tooltip = ({ children, title }) => {\n  const [show, setShow] = useState(false);\n\n  const handleOnHover = useCallback(() => setShow(true), []);\n  const handleHoverOut = useCallback(() => setShow(false), []);\n\n  return (\n    <div\n      className=\"top-bottom-mar8\"\n      style={{ display: \"flex\", alignItems: \"center\" }}\n      onMouseOver={handleOnHover}\n      onMouseOut={handleHoverOut}\n    >\n      {children}\n      {show && <div className=\"tooltip-title\">{title}</div>}\n    </div>\n  );\n};\nexport { Tooltip };\n","import React, { useCallback } from \"react\";\n\nimport { IconButton } from \"./utilityComponents/IconButton\";\nimport { Tooltip } from \"./utilityComponents/Tooltip\";\n\nimport { BULK_ACTIONS, ACTIONS } from \"../constants\";\nimport { ICON_CLASS_MAP } from \"../iconClassMap\";\n\nconst BulkActionPanel = React.memo(({ currentlySelectedIds, onTodoAction }) => {\n  const handleBulkCompletionToggle = useCallback(() => {\n    onTodoAction({ type: ACTIONS.TOGGLE_COMPLETION, payload: { ids: currentlySelectedIds } });\n  }, [currentlySelectedIds, onTodoAction]);\n\n  const handleClearSelection = useCallback(\n    () => onTodoAction({ type: ACTIONS.RESET_SELECTED_IDS }),\n    [onTodoAction]\n  );\n\n  const handleBulkDelete = useCallback(\n    () =>\n      onTodoAction({\n        type: ACTIONS.DELETE,\n        payload: { ids: currentlySelectedIds },\n      }),\n    [currentlySelectedIds, onTodoAction]\n  );\n\n  return (\n    <div className=\"bulk-action-btns bulk-actions-position\">\n      <Tooltip title={BULK_ACTIONS.TOGGLE_COMPLETION}>\n        <IconButton\n          btnClass=\"right-left-mar8 bg-light\"\n          iconClass={`${ICON_CLASS_MAP[BULK_ACTIONS.TOGGLE_COMPLETION]} cblack`}\n          onClick={handleBulkCompletionToggle}\n        />\n      </Tooltip>\n      <Tooltip title={BULK_ACTIONS.CLEAR_SELECTION}>\n        <IconButton\n          btnClass=\"right-left-mar8 bg-light\"\n          iconClass={`${ICON_CLASS_MAP[BULK_ACTIONS.CLEAR_SELECTION]} cblack`}\n          onClick={handleClearSelection}\n        />\n      </Tooltip>\n      <Tooltip title={BULK_ACTIONS.DELETE}>\n        <IconButton\n          btnClass=\"right-left-mar8 bg-light\"\n          iconClass={`${ICON_CLASS_MAP[BULK_ACTIONS.DELETE]} cblack`}\n          onClick={handleBulkDelete}\n        />\n      </Tooltip>\n    </div>\n  );\n});\nBulkActionPanel.displayName = \"BulkActionPanel\";\nexport { BulkActionPanel };\n","import React from \"react\";\n\nimport { ICON_CLASS_MAP } from \"../iconClassMap\";\nimport { MODAL_WINDOW_ACTIONS } from \"../constants\";\n\nexport const ModalWindow = ({ children, onModalWindowAction }) => {\n  const closeModal = () => onModalWindowAction({ type: MODAL_WINDOW_ACTIONS.CLOSE });\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__modal-content b12 pad12\">\n        <div className=\"modal__modal-content__close-btn\" onClick={closeModal}>\n          <i className={ICON_CLASS_MAP.CLOSE}></i>\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useState } from \"react\";\n\nimport { TodoForm } from \"./TodoForm\";\nimport { Button } from \"./utilityComponents/Button\";\n\nimport { MODAL_WINDOW_ACTIONS, ACTIONS } from \"../constants\";\n\nconst EditTodoForm = React.memo(({ todo, onModalWindowAction, onTodoAction }) => {\n  const [todoData, setTodoData] = useState(todo);\n\n  const handleTodoDataChange = useCallback(\n    (event) =>\n      setTodoData((prevTodoData) => ({\n        ...prevTodoData,\n        [event.target.dataset.name]: event.target.value,\n      })),\n    []\n  );\n\n  const handleUpdate = useCallback(() => {\n    if (todoData.title === \"\") {\n      return;\n    }\n    onTodoAction({ type: ACTIONS.UPDATE, payload: { updatedTodos: todoData } });\n    onModalWindowAction({ type: MODAL_WINDOW_ACTIONS.CLOSE });\n  }, [onModalWindowAction, onTodoAction, todoData]);\n\n  return (\n    <>\n      <div className=\"normal-bold-text top-bottom-mar8 cblack\">Update Your Todo</div>\n      <TodoForm formData={todoData} onFormChange={handleTodoDataChange} />\n      <Button label=\"Update\" onClick={handleUpdate} />\n    </>\n  );\n});\nEditTodoForm.displayName = \"EditTodoForm\";\nexport { EditTodoForm };\n","const createMockServer = () => {\n  let todos = [];\n\n  const getIndexInDatabase = (id) => todos.findIndex((todo) => todo.id === id);\n\n  const serverWorking = () => Math.random() <= 0.9999;\n\n  const updateLocalStorage = () => localStorage.setItem(\"todos\", JSON.stringify(todos));\n\n  return {\n    getTodosFromDatabase: () =>\n      new Promise((resolve, reject) => {\n        let storedTodos = JSON.parse(localStorage.getItem(\"todos\"));\n        const newTodos = [];\n        if (storedTodos) {\n          todos = [];\n          storedTodos.forEach((todo) => {\n            todos = todos.concat(todo);\n            newTodos.push({ ...todo });\n          });\n        }\n        resolve(newTodos);\n      }),\n\n    createTodoInDatabase: (newTodos) =>\n      new Promise((resolve, reject) => {\n        if (serverWorking()) {\n          const newTodosAsArray = Array.isArray(newTodos) ? newTodos : [newTodos];\n          newTodosAsArray.forEach((newTodo) => (todos = todos.concat({ ...newTodo })));\n          updateLocalStorage();\n          resolve();\n        } else {\n          reject(\"Opps!! something went wrong server side, plz try again after sometime\");\n        }\n      }),\n\n    updateTodoInDatabase: (updatedTodos) =>\n      new Promise((resolve, reject) => {\n        if (serverWorking()) {\n          const updatedTodosAsArray = Array.isArray(updatedTodos) ? updatedTodos : [updatedTodos];\n\n          updatedTodosAsArray.forEach((updatedTodo, i) => {\n            const index = getIndexInDatabase(updatedTodo.id);\n            todos = todos.slice(0, index).concat({ ...updatedTodo }, todos.slice(index + 1));\n          });\n          updateLocalStorage();\n          resolve();\n        } else {\n          reject(\"Opps!! Cannot update right now, plz try again after sometime\");\n        }\n      }),\n\n    deleteTodoFromDatabase: (ids) =>\n      new Promise((resolve, reject) => {\n        if (serverWorking()) {\n          const idsAsArray = Array.isArray(ids) ? ids : [ids];\n\n          idsAsArray.forEach((id) => {\n            const index = getIndexInDatabase(id);\n            todos = todos.slice(0, index).concat(todos.slice(index + 1));\n          });\n          updateLocalStorage();\n          resolve();\n        } else {\n          reject(\"Opps!! something went wrong while deleting TODO, plz try again after sometime\");\n        }\n      }),\n  };\n};\n\nexport const mockServer = createMockServer();\n","import { useCallback, useReducer, useContext, useRef, useEffect } from \"react\";\n\nimport { SnackbarContext } from \"../components/SnackbarProvider\";\n\nimport { mockServer } from \"../mockServer\";\nimport { ACTIONS } from \"../constants\";\n\nconst findIndexById = (todos, id) => todos.findIndex((todo) => todo.id === id);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD:\n      return { ...state, todos: state.todos.concat(action.payload.newTodos) };\n\n    case ACTIONS.UPDATE:\n      const todos = [...state.todos];\n      action.payload.updatedTodos.forEach((updatedTodo) => {\n        const indexInTodos = findIndexById(todos, updatedTodo.id);\n        todos[indexInTodos] = updatedTodo;\n      });\n      return { ...state, todos };\n\n    case ACTIONS.DELETE:\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => !action.payload.ids.includes(todo.id)),\n      };\n\n    case ACTIONS.TOGGLE_FROM_SELECTED:\n      if (state.currentlySelectedIds.includes(action.payload.id)) {\n        return {\n          ...state,\n          currentlySelectedIds: state.currentlySelectedIds.filter((id) => id !== action.payload.id),\n        };\n      } else {\n        return {\n          ...state,\n          currentlySelectedIds: state.currentlySelectedIds.concat(action.payload.id),\n        };\n      }\n    case ACTIONS.RESET_SELECTED_IDS:\n      return { ...state, currentlySelectedIds: [] };\n\n    default:\n      return state;\n  }\n};\n\nconst INITIAL_TODOS_STATE = {\n  todos: [],\n  currentlySelectedIds: [],\n};\n\nexport const useTodosState = () => {\n  const [todosState, dispatch] = useReducer(reducer, INITIAL_TODOS_STATE);\n\n  const showSnackbar = useContext(SnackbarContext);\n  const showSnackbarRef = useRef();\n  showSnackbarRef.current = showSnackbar;\n\n  useEffect(\n    () =>\n      mockServer\n        .getTodosFromDatabase()\n        .then((todos) => {\n          dispatch({ type: ACTIONS.ADD, payload: { newTodos: todos } });\n        })\n        .catch(showSnackbarRef.current),\n    []\n  );\n\n  const onTodoAction = useCallback(\n    ({ type, payload }) => {\n      let updatedTodos;\n      let ids;\n\n      switch (type) {\n        case ACTIONS.ADD:\n          mockServer\n            .createTodoInDatabase(payload.newTodos)\n            .then(() => {\n              dispatch({\n                type: ACTIONS.ADD,\n                payload: {\n                  newTodos: Array.isArray(payload.newTodos) ? payload.newTodos : [payload.newTodos],\n                },\n              });\n            })\n            .catch(showSnackbarRef.current);\n          break;\n\n        case ACTIONS.UPDATE:\n          updatedTodos = payload.updatedTodos;\n          mockServer\n            .updateTodoInDatabase(updatedTodos)\n            .then(() => {\n              dispatch({\n                type: ACTIONS.UPDATE,\n                payload: {\n                  updatedTodos: Array.isArray(updatedTodos) ? updatedTodos : [updatedTodos],\n                },\n              });\n              if (Array.isArray(updatedTodos)) {\n                dispatch({ type: ACTIONS.RESET_SELECTED_IDS });\n              }\n            })\n            .catch(showSnackbarRef.current);\n          break;\n\n        case ACTIONS.DELETE:\n          ids = payload.ids;\n          mockServer\n            .deleteTodoFromDatabase(ids)\n            .then(() => {\n              dispatch({\n                type: ACTIONS.DELETE,\n                payload: { ids: Array.isArray(ids) ? ids : [ids] },\n              });\n              if (Array.isArray(payload.ids)) {\n                dispatch({ type: ACTIONS.RESET_SELECTED_IDS });\n              }\n            })\n            .catch(showSnackbarRef.current);\n          break;\n\n        case ACTIONS.TOGGLE_COMPLETION:\n          ids = Array.isArray(payload.ids) ? payload.ids : [payload.ids];\n          updatedTodos = ids.map((id) => {\n            const index = findIndexById(todosState.todos, id);\n            return { ...todosState.todos[index], completed: !todosState.todos[index].completed };\n          });\n          mockServer\n            .updateTodoInDatabase(updatedTodos)\n            .then(() => {\n              dispatch({\n                type: ACTIONS.UPDATE,\n                payload: {\n                  updatedTodos: updatedTodos,\n                },\n              });\n              if (Array.isArray(payload.ids)) {\n                dispatch({ type: ACTIONS.RESET_SELECTED_IDS });\n              }\n            })\n            .catch(showSnackbarRef.current);\n          break;\n\n        case ACTIONS.TOGGLE_FROM_SELECTED:\n          dispatch({ type, payload });\n          break;\n        case ACTIONS.RESET_SELECTED_IDS:\n          dispatch({ type });\n          break;\n        default:\n          break;\n      }\n    },\n    [todosState]\n  );\n\n  return { todosState, onTodoAction };\n};\n","import { useState, useCallback } from \"react\";\nimport {} from \"react/cjs/react.development\";\n\nimport { FILTER_ACTIONS } from \"../constants\";\n\nconst INITIAL_FILTERS = {\n  urgencyFilter: {},\n  categoryFilter: {},\n  showInComplete: false,\n  searchValue: \"\",\n};\n\nexport const useFilterState = () => {\n  const [filters, setFilters] = useState(INITIAL_FILTERS);\n\n  const onFilterAction = useCallback(\n    ({ type, payload }) => {\n      switch (type) {\n        case FILTER_ACTIONS.UPDATE_URGENCY_FILTER:\n          const updatedUrgencyFilter = {\n            ...filters.urgencyFilter,\n            [payload.type]: !filters.urgencyFilter[payload.type],\n          };\n          setFilters({ ...filters, urgencyFilter: updatedUrgencyFilter });\n          break;\n\n        case FILTER_ACTIONS.UPDATE_CATEGORY_FILTER:\n          const updatedCategoryFilter = {\n            ...filters.categoryFilter,\n            [payload.type]: !filters.categoryFilter[payload.type],\n          };\n          setFilters({ ...filters, categoryFilter: updatedCategoryFilter });\n          break;\n\n        case FILTER_ACTIONS.TOGGLE_SHOW_INCOMPLETE:\n          setFilters({ ...filters, showInComplete: !filters.showInComplete });\n          break;\n\n        case FILTER_ACTIONS.UPDATE_SEARCH_VALUE:\n          setFilters({ ...filters, searchValue: payload.newSearchValue });\n          break;\n\n        default:\n          break;\n      }\n    },\n    [filters]\n  );\n\n  return { filters, onFilterAction };\n};\n","import React, { useMemo } from \"react\";\n\nimport { FilterPanel } from \"./FilterPanel\";\nimport { Header } from \"./Header\";\nimport { CreateTodoForm } from \"./CreateTodoForm\";\nimport { Analytics } from \"./Analytics\";\nimport { TodoList } from \"./TodoList\";\nimport { BulkActionPanel } from \"./BulkActionPanel\";\nimport { ModalWindow } from \"./ModalWindow\";\nimport { EditTodoForm } from \"./EditTodoForm\";\n\nimport { useTodosState } from \"../hooks/useTodosState\";\nimport { useFilterState } from \"../hooks/useFilterState\";\nimport { useModalWindow } from \"../hooks/useModalWindow\";\nimport { useDate } from \"../hooks/useDate\";\n\nimport { validateTodoForFilter } from \"../helpers\";\n\nimport \"../TodoApp.css\";\n\nconst TodoAppBody = ({ todos, currentlySelectedIds, filters, onAction }) => (\n  <>\n    <div className=\"todo-app-body mar4\">\n      <div className=\"todo-app-body__sidebar b8 pad8\">\n        <FilterPanel appliedFilter={filters} onFilterAction={onAction.onFilterAction} />\n        <CreateTodoForm onTodoAction={onAction.onTodoAction} />\n        <Analytics todos={todos} />\n      </div>\n      <div className=\"todo-app-body__todo-panel b8\">\n        <TodoList\n          todos={todos}\n          currentlySelectedIds={currentlySelectedIds}\n          onTodoAction={onAction.onTodoAction}\n          onModalWindowAction={onAction.onModalWindowAction}\n        />\n      </div>\n    </div>\n    <BulkActionPanel\n      currentlySelectedIds={currentlySelectedIds}\n      onTodoAction={onAction.onTodoAction}\n    />\n  </>\n);\n\nexport const TodoApp = () => {\n  const { todosState, onTodoAction } = useTodosState();\n  const { filters, onFilterAction } = useFilterState();\n  const { modalWindow, onModalWindowAction } = useModalWindow();\n  const { date } = useDate();\n\n  const filteredTodos = useMemo(\n    () => todosState.todos.filter((todo) => validateTodoForFilter(todo, filters)),\n    [filters, todosState]\n  );\n  const onAction = useMemo(\n    () => ({\n      onTodoAction,\n      onFilterAction,\n      onModalWindowAction,\n    }),\n    [onTodoAction, onFilterAction, onModalWindowAction]\n  );\n\n  return (\n    <>\n      <Header date={date} searchValue={filters.searchValue} onFilterAction={onFilterAction} />\n      <TodoAppBody\n        todos={filteredTodos}\n        currentlySelectedIds={todosState.currentlySelectedIds}\n        filters={filters}\n        onAction={onAction}\n      />\n      {modalWindow.isOpen && (\n        <ModalWindow onModalWindowAction={onModalWindowAction}>\n          <EditTodoForm\n            todo={modalWindow.data}\n            onModalWindowAction={onModalWindowAction}\n            onTodoAction={onTodoAction}\n          />\n        </ModalWindow>\n      )}\n    </>\n  );\n};\n","import { useCallback, useState } from \"react\";\n\nimport { MODAL_WINDOW_ACTIONS } from \"../constants\";\n\n//\nexport const useModalWindow = () => {\n  const [modalWindow, setModalWindow] = useState({\n    isOpen: false,\n    data: {},\n  });\n\n  const onModalWindowAction = useCallback(({ type, payload }) => {\n    switch (type) {\n      case MODAL_WINDOW_ACTIONS.SHOW:\n        setModalWindow({\n          isOpen: true,\n          data: payload.data,\n        });\n        break;\n\n      case MODAL_WINDOW_ACTIONS.CLOSE:\n        setModalWindow({ isOpen: false, data: {} });\n        break;\n\n      default:\n        break;\n    }\n  }, []);\n\n  return { modalWindow, onModalWindowAction };\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useDate = () => {\n  const [date, setDate] = useState(new Date().toDateString());\n\n  useEffect(() => {\n    setInterval(() => {\n      setDate(new Date().toDateString());\n    }, 60000);\n  }, []);\n\n  return { date };\n};\n","import { URGENCIES, CATEGORIES } from \"./constants.js\";\n\nexport const validateTodoForFilter = (todo, filterData) => {\n  //collecting all consitions's true/false value\n  const noUrgencyApplied = !(\n    filterData.urgencyFilter[URGENCIES.LOW] ||\n    filterData.urgencyFilter[URGENCIES.MEDIUM] ||\n    filterData.urgencyFilter[URGENCIES.HIGH]\n  );\n  const noCategoryApplied = !(\n    filterData.categoryFilter[CATEGORIES.PERSONAL] ||\n    filterData.categoryFilter[CATEGORIES.ACADEMIC] ||\n    filterData.categoryFilter[CATEGORIES.SOCIAL]\n  );\n\n  const isChecked = filterData.showInComplete;\n  const isSatifiesSearchValue =\n    filterData.searchValue === \"\" || todo.title.toLowerCase().indexOf(filterData.searchValue) + 1;\n\n  return (\n    (filterData.urgencyFilter[todo.urgency] || noUrgencyApplied) &&\n    (filterData.categoryFilter[todo.category] || noCategoryApplied) &&\n    ((isChecked && !todo.completed) || !isChecked) &&\n    isSatifiesSearchValue\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { SnackbarProvider } from \"./components/SnackbarProvider\";\nimport { TodoApp } from \"./components/TodoApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider>\n      <TodoApp />\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}